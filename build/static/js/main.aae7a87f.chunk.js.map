{"version":3,"sources":["utils/constants.js","services/UserService.js","services/ProductService.js","utils/store.js","components/Navbar.js","components/AddAccount.js","components/AdminEditAccount.js","components/AddProduct.js","components/EditProduct.js","assets/images/Login Image.svg","pages/Login.js","assets/images/Edit Icon.svg","assets/images/Trash Icon.svg","pages/Users.js","pages/AdminInventory.js","pages/UserInventory.js","pages/UserEditAccount.js","utils/AdminRoute.js","utils/UserRoute.js","utils/PublicRoute.js","App.js","index.js"],"names":["USER_FALLBACK","USER_API_BASE_URL","PRODUCT_API_BASE_URL","UserService","getAllUsers","axios","get","postRegister","username","post","postLogin","user","postLogout","patchUser","id","userType","previousPassword","newPassword","patch","deleteUser","delete","getAllProducts","postAddProduct","product","patchProduct","deleteProduct","name","getUser","localStorage","getItem","JSON","parse","setUserLocal","setItem","stringify","Navbar","onLogout","then","res","status","removeItem","window","location","reload","console","log","className","href","pathname","onClick","AddAccount","errorMessage","visible","onOk","onCancel","useState","setUsername","clearFields","handleOk","title","okText","value","onChange","e","target","trim","placeholder","onKeyPress","key","style","color","Option","Select","AdminEditAccount","role","setRole","editPasswordFlag","setEditPasswordFlag","setPreviousPassword","setNewPassword","confirmPassword","setConfirmPassword","useEffect","width","val","disabled","checked","type","AddProduct","productName","setProductName","quantity","setQuantity","price","setPrice","supplier","setSupplier","setLocation","moment","datePurchased","setDatePurchased","display","justifyContent","min","format","EditProduct","date","Login","password","setPassword","setErrorMessage","onSignin","result","data","catch","err","response","src","loginImage","alt","Users","props","state","users","searchValue","count","addAccountVisible","editAccountVisible","addAccountError","editAccountError","toBeEdited","setState","length","confirmNewPassword","this","includes","_id","Modal","success","content","index","indexOf","updateUser","slice","confirm","a","updatedUsers","info","error","code","filter","toLowerCase","map","editIcon","onDelete","trashIcon","addAccount","onEdit","Component","RangePicker","DatePicker","AdminInventory","products","addProductVisible","addProductError","editProductVisible","editProductError","fromDateFilter","toDateFilter","ProductService","previousDate","presentDate","prevName","updatedProducts","ranges","startOf","endOf","bordered","resetFilter","item","dateString","parseFloat","toLocaleString","minimumFractionDigits","addProduct","editProduct","UserInventory","Today","UserEditAccount","setConfirmNewPassword","onConfirm","preventDefault","AdminRoute","component","rest","render","to","from","UserRoute","PublicRoute","App","path","document","getElementById"],"mappings":"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","file":"static/js/main.aae7a87f.chunk.js","sourcesContent":["const LOGIN_FALLBACK = '/';\r\nconst ADMIN_FALLBACK = '/users';\r\nconst USER_FALLBACK = '/inventory';\r\n\r\nconst USER_API_BASE_URL = \"/api/users\";\r\nconst PRODUCT_API_BASE_URL = \"/api/products\";\r\n\r\nexport { \r\n  LOGIN_FALLBACK,\r\n  ADMIN_FALLBACK,\r\n  USER_FALLBACK,\r\n  USER_API_BASE_URL,\r\n  PRODUCT_API_BASE_URL\r\n};","/* Contains the functions to requests to URL Paths in relation to the `users` collection */\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { USER_API_BASE_URL } from \"../utils/constants\";\r\n\r\nconst UserService = {\r\n  getAllUsers: () => axios.get(USER_API_BASE_URL),\r\n  postRegister: (username) => axios.post(`${USER_API_BASE_URL}/register`, { username }),\r\n  postLogin: (user) => axios.post(`${USER_API_BASE_URL}/login`, user),\r\n  postLogout: () => axios.post(`${USER_API_BASE_URL}/logout`),\r\n  patchUser: (id, username, userType, previousPassword, newPassword) => axios.patch(`${USER_API_BASE_URL}`, {id, username, userType, previousPassword, newPassword}), \r\n  deleteUser: (id) => axios.delete(`${USER_API_BASE_URL}/${id}`),\r\n}\r\n\r\nexport default UserService;","/* Contains the functions to requests to URL Paths in relation to the `products` collection */\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { PRODUCT_API_BASE_URL } from \"../utils/constants\";\r\n\r\nconst UserService = {\r\n  getAllProducts: () => axios.get(PRODUCT_API_BASE_URL),\r\n  postAddProduct: (product) => axios.post(`${PRODUCT_API_BASE_URL}/add`, product),\r\n  patchProduct: (product) => axios.patch(PRODUCT_API_BASE_URL, product),\r\n  deleteProduct: (name) => axios.delete(`${PRODUCT_API_BASE_URL}/delete/${name}`)\r\n}\r\n\r\nexport default UserService;","// local storage for the user\r\n\r\n/* ---------------- USER ------------------*/\r\n\r\n// return the user data from the local storage\r\nexport const getUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  if (user) return JSON.parse(user);\r\n  return null;\r\n};\r\n\r\n// remove the token and user from the local storage\r\nexport const removeLocalUser = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// set the token and user from the local storage\r\nexport const setUserLocal = (user) => {\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n};","import React from 'react';\r\n\r\nimport { UserService } from '../services';\r\nimport { getUser, removeLocalUser } from '../utils/store';\r\n\r\nimport '../assets/styles/components/Navbar.css';\r\n\r\nconst Navbar = ({ username }) => {\r\n  const onLogout = () => {\r\n    UserService.postLogout()\r\n      .then((res) => {\r\n        if(res.status === 200) {\r\n          removeLocalUser();\r\n          window.location.reload();\r\n        } else {\r\n          console.log(\"There was an error logging out...\");\r\n        } \r\n      })\r\n  }\r\n\r\n  return <div id=\"navbar\">\r\n    <div className=\"left\">\r\n      <span>{username}</span>\r\n    </div>\r\n    <div className=\"middle\">\r\n      {getUser().userType === \"admin\" ? <a href=\"/users\" className={window.location.pathname === '/users' ? \"active\" : \"\"}>Accounts</a> : <></>}\r\n      <a href=\"/inventory\" className={window.location.pathname === '/inventory' ? \"active\" : \"\"}>Inventory</a>\r\n      {getUser().userType === \"user\" ? <a href=\"/edit\" className={window.location.pathname === '/edit' ? \"active\" : \"\"}>Edit</a> : <></>}\r\n    </div>\r\n    <button className=\"logout-button\" onClick={() => onLogout()}>Log out</button>\r\n  </div>\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\n\r\nimport { Modal, Input } from 'antd';\r\n\r\nconst AddAccount = ({ errorMessage, visible, onOk, onCancel }) => {\r\n  const [username, setUsername] = useState('');\r\n\r\n  const clearFields = () => {\r\n    setUsername('');\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(username);\r\n    clearFields();\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n    clearFields();\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      title=\"Add Account\" \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Add\" \r\n      onCancel={handleCancel}\r\n    >\r\n      <label><strong>Username</strong></label>\r\n      <Input \r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value.trim())} \r\n        placeholder=\"Enter username\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n      <p>Note: Password will automatically generated.</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default AddAccount;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Modal, Input, Select, Checkbox } from 'antd';\r\nimport { getUser } from '../utils/store';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AdminEditAccount = ({ user, errorMessage, visible, onOk, onCancel }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [editPasswordFlag, setEditPasswordFlag] = useState(false);\r\n  const [previousPassword, setPreviousPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    clearFields();\r\n  }, [user]);\r\n\r\n  const clearFields = () => {\r\n    if(user != null) {\r\n      setUsername(user.username)\r\n      setRole(user.userType);\r\n    }\r\n    setPreviousPassword('');\r\n    setNewPassword('');\r\n    setConfirmPassword('');\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(username, role, editPasswordFlag, previousPassword, newPassword, confirmPassword);\r\n    clearFields();\r\n    setEditPasswordFlag(false);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    onCancel();\r\n    clearFields();\r\n    setEditPasswordFlag(false);\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      title={`Edit ${username}'s Password`} \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Confirm\" \r\n      onCancel={handleClose}\r\n    >\r\n      <label><strong>Username</strong></label>\r\n      <Input \r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value.trim())} \r\n        placeholder=\"Enter username\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <br /><br />\r\n      <label><strong>Role</strong></label>\r\n      <br />\r\n      <Select style={{width: '100%'}} value={role} onChange={(val) => setRole(val)} disabled={!user || getUser().username === user.username}>\r\n        <Option value='user'>user</Option>\r\n        <Option value='admin'>admin</Option>\r\n      </Select>\r\n      <br /><br />\r\n      <Checkbox checked={editPasswordFlag} onChange={(e) => setEditPasswordFlag(e.target.checked)}>Edit Password</Checkbox>\r\n      <br />\r\n      <label><strong>Previous Password</strong></label>\r\n      <Input \r\n        type='password'\r\n        value={previousPassword} \r\n        onChange={(e) => setPreviousPassword(e.target.value.trim())} \r\n        placeholder=\"Enter previous password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <br /><br />\r\n      <label><strong>New Password</strong></label>\r\n      <Input \r\n        type='password'\r\n        value={newPassword} \r\n        onChange={(e) => setNewPassword(e.target.value.trim())} \r\n        placeholder=\"Enter current password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <label><strong>Confirm Password</strong></label>\r\n      <Input \r\n        type='password'\r\n        value={confirmPassword} \r\n        onChange={(e) => setConfirmPassword(e.target.value.trim())} \r\n        placeholder=\"Confirm your password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default AdminEditAccount;\r\n","import React, { useState } from 'react';\r\nimport { Modal, Input, InputNumber, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst AddProduct = ({ errorMessage, visible, onOk, onCancel }) => {\r\n  const [productName, setProductName] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [price, setPrice] = useState(1);\r\n  const [supplier, setSupplier] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [datePurchased, setDatePurchased] = useState(moment());\r\n\r\n  const clearFields = () => {\r\n    setProductName('');\r\n    setQuantity(1);\r\n    setPrice(1);\r\n    setSupplier('');\r\n    setLocation('');\r\n    setDatePurchased(moment())\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(productName, quantity, price, supplier, location, datePurchased);\r\n    clearFields();\r\n  } \r\n  const handleCancel = () => {\r\n    onCancel();\r\n    clearFields();\r\n  }\r\n\r\n  return(\r\n    <Modal \r\n      title=\"Add Product\" \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Add\" \r\n      onCancel={handleCancel}\r\n    >\r\n      <label><strong>Product Name</strong></label>\r\n      <Input \r\n        name=\"product_name\"\r\n        value={productName} \r\n        onChange={(e) => setProductName(e.target.value)} \r\n        placeholder=\"Enter product name\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n        <div>\r\n          <label><strong>Quantity</strong></label>\r\n          <InputNumber \r\n            name=\"quantity\"\r\n            min={1}\r\n            value={quantity} \r\n            onChange={(val) => setQuantity(val)} \r\n            placeholder=\"Enter quantity\" \r\n            onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n            style={{width: '100%'}} \r\n          />\r\n        </div>\r\n        <div>\r\n          <label><strong>Price</strong></label>\r\n          <InputNumber \r\n            name=\"price\"\r\n            min={1}\r\n            value={price} \r\n            onChange={(val) => setPrice(val)} \r\n            placeholder=\"Enter price\" \r\n            onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n            style={{width: '100%'}} \r\n          />\r\n        </div>\r\n      </div>\r\n      <label><strong>Supplier</strong></label>\r\n      <Input \r\n        name=\"supplier\"\r\n        value={supplier} \r\n        onChange={(e) => setSupplier(e.target.value)} \r\n        placeholder=\"Enter supplier\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <label><strong>Stock Location</strong></label>\r\n      <Input \r\n        name=\"location\"\r\n        value={location} \r\n        onChange={(e) => setLocation(e.target.value)} \r\n        placeholder=\"Enter location\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <label><strong>Date Purchased</strong></label>\r\n      <br />\r\n      <DatePicker \r\n        name=\"date_purchased\"\r\n        value={datePurchased}\r\n        format='MMMM DD, YYYY'\r\n        onChange={(val) => setDatePurchased(val)}\r\n        style={{width: '100%'}} \r\n      />\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default AddProduct;","import React, { useEffect, useState } from 'react';\r\nimport { Modal, Input, InputNumber, DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst EditProduct = ({ product, errorMessage, visible, onOk, onCancel }) => {\r\n  const [productName, setProductName] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [price, setPrice] = useState(1);\r\n  const [supplier, setSupplier] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [datePurchased, setDatePurchased] = useState(moment());\r\n\r\n  useEffect(() => {\r\n    clearFields();\r\n  }, [product])\r\n\r\n  const clearFields = () => {\r\n    if(product) {\r\n      setProductName(product.name);\r\n      setQuantity(product.quantity);\r\n      setPrice(product.price);\r\n      setSupplier(product.supplier);\r\n      setLocation(product.location);\r\n      console.log(product.date)\r\n      setDatePurchased(moment(product.date));\r\n    }\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(productName, quantity, price, supplier, location, datePurchased);\r\n    clearFields();\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n    clearFields();\r\n  }\r\n\r\n  return(\r\n    <Modal \r\n      title=\"Edit Product\" \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Edit\" \r\n      onCancel={handleCancel}\r\n    >\r\n      <label><strong>Product Name</strong></label>\r\n      <Input \r\n        name=\"product_name\"\r\n        value={productName} \r\n        onChange={(e) => setProductName(e.target.value)} \r\n        placeholder=\"Enter product name\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n        <div>\r\n          <label><strong>Quantity</strong></label>\r\n          <InputNumber \r\n            name=\"quantity\"\r\n            min={1}\r\n            value={quantity} \r\n            onChange={(val) => setQuantity(val)} \r\n            placeholder=\"Enter quantity\" \r\n            onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n            style={{width: '100%'}} \r\n          />\r\n        </div>\r\n        <div>\r\n          <label><strong>Price</strong></label>\r\n          <InputNumber \r\n            name=\"price\"\r\n            min={1}\r\n            value={price} \r\n            onChange={(val) => setPrice(val)} \r\n            placeholder=\"Enter price\" \r\n            onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n            style={{width: '100%'}} \r\n          />\r\n        </div>\r\n      </div>\r\n      <label><strong>Supplier</strong></label>\r\n      <Input \r\n        name=\"supplier\"\r\n        value={supplier} \r\n        onChange={(e) => setSupplier(e.target.value)} \r\n        placeholder=\"Enter supplier\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <label><strong>Stock Location</strong></label>\r\n      <Input \r\n        name=\"location\"\r\n        value={location} \r\n        onChange={(e) => setLocation(e.target.value)} \r\n        placeholder=\"Enter location\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <label><strong>Date Purchased</strong></label>\r\n      <br />\r\n      <DatePicker \r\n        name=\"date_purchased\"\r\n        value={datePurchased}\r\n        format='MMMM DD, YYYY'\r\n        onChange={(val) => setDatePurchased(val)}\r\n        style={{width: '100%'}} \r\n      />\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default EditProduct;","export default __webpack_public_path__ + \"static/media/Login Image.6954d3e8.svg\";","import React, { useState } from 'react';\r\n\r\nimport { UserService } from '../services';\r\nimport { setUserLocal } from '../utils/store';\r\n\r\nimport loginImage from '../assets/images/Login Image.svg';\r\n\r\nimport '../assets/styles/pages/Login.css';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // calls this when logging in\r\n  const onSignin = () => {\r\n    const user = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    if(username === '') {\r\n      setErrorMessage(\"Username is empty\");\r\n      return;\r\n    }\r\n\r\n    if(password === '') {\r\n      setErrorMessage(\"Password is empty\");\r\n      return;\r\n    }\r\n\r\n    UserService.postLogin(user)\r\n      .then((res) => {\r\n        if(res.status === 200) {\r\n          const { result } = res.data;\r\n          setUserLocal(result);\r\n          window.location.reload();\r\n        } \r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 401) {\r\n          setErrorMessage(\"Invalid username or password\");  \r\n        }\r\n      })\r\n  }\r\n\r\n  return <div id=\"login-page\">\r\n    <div className=\"card\">\r\n      <p className=\"title\">Login</p>\r\n      <p className=\"sub-title\">Welcome back!</p>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Username\"\r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value.trim())} \r\n        onKeyPress={(e) => e.key === 'Enter' && onSignin()}\r\n      />\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"Password\"\r\n        value={password} \r\n        onChange={(e) => setPassword(e.target.value.trim())} \r\n        onKeyPress={(e) => e.key === 'Enter' && onSignin()}\r\n      />\r\n      <p className=\"error-message\">{errorMessage}</p>\r\n      <img src={loginImage} alt=\"Login\" />\r\n      <button onClick={() => onSignin()}>Sign in</button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/Edit Icon.7ee14592.svg\";","export default __webpack_public_path__ + \"static/media/Trash Icon.5db8102e.svg\";","import React, { Component } from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nimport { AddAccount, AdminEditAccount } from '../components';\r\nimport { UserService } from '../services';\r\nimport { getUser, setUserLocal } from '../utils/store';\r\n\r\nimport editIcon from '../assets/images/Edit Icon.svg';\r\nimport trashIcon from '../assets/images/Trash Icon.svg';\r\n\r\nimport '../assets/styles/pages/Users.css';\r\n\r\nexport default class Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      searchValue: '',\r\n      count: 0,\r\n      addAccountVisible: false,\r\n      editAccountVisible: false,\r\n      addAccountError: '',\r\n      editAccountError: '',\r\n      toBeEdited: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAllUsers()\r\n      .then((res) => {\r\n        const { result: users } = res.data;\r\n\r\n        this.setState({ users , count: users.length });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  onEdit(username, userType, editPasswordFlag, previousPassword, newPassword, confirmNewPassword) {\r\n    const { toBeEdited, users } = this.state;\r\n\r\n    if(toBeEdited != null) {\r\n      if(username === '' || username === null) {\r\n        this.setState({ editAccountError: \"Username cannot be empty\" });\r\n        return;\r\n      } else if(username.length < 6) {\r\n        this.setState({ editAccountError: \"Username has to be at least 6 characters\" })\r\n        return;\r\n      } else if(username.length > 30) {\r\n        this.setState({ editAccountError: \"Username has to be atmost 30 characters\" })\r\n        return;\r\n      } else if(username.includes(' ')) {\r\n        this.setState({ editAccountError: \"Username cannot contain a space\" })\r\n        return;\r\n      } \r\n      \r\n      if(!editPasswordFlag && username === toBeEdited.username && userType === toBeEdited.userType) {\r\n        this.setState({ editAccountError: \"Cannot proceed. No changes has been done\" })\r\n        return;\r\n      }\r\n\r\n      if(userType !== 'user' && userType !== 'admin') {\r\n        this.setState({ editAccountError: \"Role can only be either `user` or `admin`\" })\r\n        return;\r\n      }\r\n\r\n      if(editPasswordFlag) {\r\n        if(previousPassword === '' || previousPassword === null) {\r\n          this.setState({ editAccountError: \"Previous password cannot be empty\" });\r\n          return;\r\n        }\r\n  \r\n        if(newPassword === '' || newPassword === null) {\r\n          this.setState({ editAccountError: \"New password cannot be empty\" });\r\n          return;\r\n        }\r\n  \r\n        if(confirmNewPassword === '' || confirmNewPassword === null) {\r\n          this.setState({ editAccountError: \"Confirm password cannot be empty\" });\r\n          return;\r\n        }\r\n  \r\n        if(previousPassword.length < 6 || newPassword.length < 6 || confirmNewPassword.length < 6) {\r\n          this.setState({ editAccountError: \"Password has to be at least 6 characters\" });\r\n          return \r\n        }\r\n    \r\n        if(previousPassword.length > 30 || newPassword.length > 30 || confirmNewPassword.length > 30) {\r\n          this.setState({ editAccountError: \"Password has to be atmost 30 characters\" });\r\n          return \r\n        }\r\n  \r\n        if(newPassword !== confirmNewPassword) {\r\n          this.setState({ editAccountError: \"New password and confirm password doesn't match\" });\r\n          return;\r\n        }\r\n      } else {\r\n        previousPassword = null;\r\n        newPassword = null;\r\n      }\r\n\r\n      UserService.patchUser(toBeEdited._id, username, userType, previousPassword, newPassword)\r\n        .then((res) => {\r\n          const { result } = res.data;\r\n\r\n          Modal.success({\r\n            content: 'User has been successfully updated',\r\n          });\r\n          \r\n          const index = users.indexOf(toBeEdited);\r\n\r\n          if(getUser().username === toBeEdited.username) {\r\n            setUserLocal(result)\r\n            this.props.updateUser(username)\r\n          }\r\n\r\n          this.setState({ editAccountVisible: false, toBeEdited: null, users: [...users.slice(0, index), result, ...users.slice(index + 1)], editAccountError: \"\" });\r\n        }) \r\n        .catch((err) => {\r\n          const { data } = err.response;\r\n\r\n          this.setState({ editAccountError: data });\r\n        })\r\n    }\r\n  }\r\n\r\n  onDelete(user) {\r\n    const { users } = this.state;\r\n\r\n    // asks for admin confirmation on whether or not to delete the user\r\n    Modal.confirm({\r\n      title: `Are you sure you want to delete ${user.username}`,\r\n      onOk: async () => {\r\n        UserService.deleteUser(user._id)\r\n        .then(() => {\r\n          const index = users.indexOf(user);\r\n          const updatedUsers = [...users.slice(0, index), ...users.slice(index + 1)];\r\n          this.setState({ users: updatedUsers, count: updatedUsers.length });\r\n          Modal.success({\r\n            content: 'User has been successfully deleted.',\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  addAccount(username) {\r\n    const { users, count } = this.state;\r\n\r\n    if(username === '' || username === null) {\r\n      this.setState({ addAccountError: \"Username cannot be empty\" })\r\n      return;\r\n    } else if(username.length < 6) {\r\n      this.setState({ addAccountError: \"Username has to be at least 6 characters\" })\r\n      return;\r\n    } else if(username.length > 30) {\r\n      this.setState({ addAccountError: \"Username has to be atmost 30 characters\" })\r\n      return;\r\n    } else if(username.includes(' ')) {\r\n      this.setState({ addAccountError: \"Username cannot contain a space\" })\r\n      return;\r\n    }\r\n\r\n    UserService.postRegister(username)\r\n      .then((res) => {\r\n        const { result } = res.data;\r\n\r\n        this.setState({ \r\n          users: [...users, result], \r\n          count: count + 1,\r\n          addAccountVisible: false,\r\n          addAccountError: \"\",\r\n        })\r\n\r\n        Modal.info({\r\n          title: \"Password\",\r\n          content: (\r\n            <div>Password: {result.password}</div>\r\n          ),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        const { error } = err.response.data;\r\n        if(error.code === 11000) {\r\n          this.setState({ addAccountError: \"Username already exists\" })\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { users, searchValue, count, addAccountVisible, addAccountError, editAccountVisible, editAccountError, toBeEdited } = this.state;\r\n\r\n    return <div id=\"users-page\">\r\n    <div className=\"header\">\r\n      <div>\r\n        <input \r\n          className=\"search-input\" \r\n          placeholder=\"Search\" \r\n          onChange={(e) => this.setState({ searchValue: e.target.value.trim() })} \r\n          value={searchValue} \r\n        />\r\n        <button \r\n          className=\"add-account-button\" \r\n          onClick={() => this.setState({ addAccountVisible: true })}\r\n        >\r\n          Add Account\r\n        </button>\r\n      </div>\r\n      <div className=\"user-stats\">\r\n        Accounts: <span className=\"count\">{count}</span>\r\n      </div>\r\n    </div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Username</th>\r\n          <th>Role</th>\r\n          <th>Operations</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          // maps each user to the table\r\n          users.filter((user) => user.username.toLowerCase().includes(searchValue.toLowerCase())).map((user) => (\r\n              <tr>\r\n                <td>{user.username}</td>\r\n                <td>{user.userType}</td>\r\n                <td>\r\n                  <button \r\n                    className=\"edit-button\" \r\n                    onClick={() => this.setState({ editAccountVisible: true, toBeEdited: user })}\r\n                  >\r\n                    <img src={editIcon} alt=\"Edit\" />\r\n                  </button>\r\n                  <button \r\n                    className=\"delete-button\" \r\n                    onClick={() => this.onDelete(user)} \r\n                    disabled={user.username === getUser().username}\r\n                  >\r\n                    <img src={trashIcon} alt=\"Delete\" />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          )\r\n        }\r\n      </tbody>\r\n    </table>\r\n    <AddAccount \r\n      visible={addAccountVisible} \r\n      onOk={(username) => this.addAccount(username)} \r\n      onCancel={() => this.setState({ addAccountVisible: false, addAccountError: \"\" })} \r\n      errorMessage={addAccountError}\r\n    />\r\n    <AdminEditAccount \r\n      user={toBeEdited}\r\n      visible={editAccountVisible}\r\n      onOk={(username, role, editPasswordFlag, previousPassword, newPassword, confirmNewPassword) => this.onEdit(username, role, editPasswordFlag, previousPassword, newPassword, confirmNewPassword)}\r\n      onCancel={() => this.setState({ editAccountVisible: false, editAccountError: \"\" })}\r\n      errorMessage={editAccountError}\r\n    />\r\n  </div>\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport { DatePicker, Modal } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { ProductService } from '../services';\r\nimport { AddProduct, EditProduct } from '../components';\r\n\r\nimport editIcon from '../assets/images/Edit Icon.svg';\r\nimport trashIcon from '../assets/images/Trash Icon.svg';\r\n\r\nimport '../assets/styles/pages/AdminInventory.css';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class AdminInventory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchValue: '',\r\n      products: [],\r\n      count: 0,\r\n      toBeEdited: null,\r\n      addProductVisible: false,\r\n      addProductError: '',\r\n      editProductVisible: false,\r\n      editProductError: '',\r\n      fromDateFilter: null,\r\n      toDateFilter: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    ProductService.getAllProducts().then((res) => {\r\n      const { result: products } = res.data;\r\n\r\n      this.setState({ products, count: products.length });\r\n    })\r\n  }\r\n\r\n  addProduct(productName, quantity, price, supplier, location, datePurchased) {\r\n    const { products, count } = this.state;\r\n\r\n    productName = productName.trim();\r\n    supplier = supplier.trim();\r\n    location = location.trim();\r\n\r\n    if(productName === null || productName === '') {\r\n      this.setState({ addProductError: \"Product Name cannot be empty\" });\r\n      return;\r\n    }\r\n\r\n    if(quantity < 1) {\r\n      this.setState({ addProductError: \"Quantity has to be greater than 0\" });\r\n      return;\r\n    }\r\n\r\n    if(price < 1) {\r\n      this.setState({ addProductError: \"Price has to be greater than 0\" });\r\n      return;\r\n    }\r\n\r\n    if(supplier === null || supplier === '') {\r\n      this.setState({ addProductError: \"Supplier cannot empty\" });\r\n      return;\r\n    }\r\n\r\n    if(location === null || location === '') {\r\n      this.setState({ addProductError: \"Stock Location cannot be empty\" });\r\n      return;\r\n    }\r\n\r\n    if(datePurchased === null) {\r\n      this.setState({ addProductError: \"Date Purchased cannot be empty\" });\r\n      return;\r\n    }\r\n\r\n    const product = {\r\n      supplier,\r\n      location,\r\n      date: datePurchased,\r\n      name: productName,\r\n      quantity,\r\n      price\r\n    }\r\n\r\n    ProductService.postAddProduct(product)\r\n      .then((res) => {\r\n        const { result } = res.data\r\n      \r\n        this.setState({ products: [...products, result], count: count + 1, addProductVisible: false, addProductError: \"\" })\r\n        \r\n        Modal.success({\r\n          content: 'Product has been successfully added.',\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        const { error } = err.response.data;\r\n        if(error.code === 11000) {\r\n          this.setState({ addProductError: \"Product name already exists\" })\r\n        }\r\n      });\r\n    }\r\n\r\n  editProduct(productName, quantity, price, supplier, location, datePurchased) {\r\n    const { products, toBeEdited } = this.state;\r\n\r\n    productName = productName.trim();\r\n    supplier = supplier.trim();\r\n    location = location.trim();\r\n\r\n    if(productName === null || productName === '') {\r\n      this.setState({ editProductError: \"Product Name cannot be empty\" });\r\n      return;\r\n    }\r\n\r\n    if(quantity < 1) {\r\n      this.setState({ editProductError: \"Quantity has to be greater than 0\" });\r\n      return;\r\n    }\r\n\r\n    if(price < 1) {\r\n      this.setState({ editProductError: \"Price has to be greater than 0\" });\r\n      return;\r\n    }\r\n\r\n    if(supplier === null || supplier === '') {\r\n      this.setState({ editProductError: \"Supplier cannot be empty\" });\r\n      return;\r\n    }\r\n\r\n    if(location === null || location === '') {\r\n      this.setState({ editProductError: \"Stock Location cannot be empty\" });\r\n      return;\r\n    }\r\n\r\n    if(datePurchased === null) {\r\n      this.setState({ editProductError: \"Date Purchased cannot be empty\" });\r\n      return;\r\n    }\r\n\r\n    const previousDate = moment(toBeEdited.date)\r\n    const presentDate = moment(datePurchased)\r\n\r\n    if(previousDate.format('MMMM DD, YYYY') === presentDate.format('MMMM DD, YYYY') && toBeEdited.name === productName && toBeEdited.quantity === quantity && toBeEdited.price === price && toBeEdited.price === price && toBeEdited.location === location && toBeEdited.supplier === supplier) {\r\n      this.setState({ editProductError: \"There were no changes made\" });\r\n      return;\r\n    }\r\n\r\n    const product = {\r\n      supplier,\r\n      location,\r\n      date: datePurchased,\r\n      name: productName,\r\n      quantity,\r\n      prevName: toBeEdited.name,\r\n      price\r\n    }\r\n\r\n    ProductService.patchProduct(product)\r\n      .then((res) => {\r\n        const { result } = res.data;\r\n\r\n        console.log(result)\r\n\r\n        Modal.success({\r\n          content: 'Product has been successfully updated.',\r\n        });\r\n        \r\n        const index = products.indexOf(toBeEdited);\r\n        this.setState({ products: [...products.slice(0, index), result, ...products.slice(index + 1)], toBeEdited: null, editProductVisible: false, editProductError: \"\" })\r\n      })\r\n      .catch((err) => {\r\n        const { data } = err.response;\r\n\r\n        this.setState({ editProductError: data });\r\n      })\r\n  }\r\n\r\n  onDelete(product) {\r\n    const { products } = this.state;\r\n\r\n    // asks for admin confirmation on whether or not to delete the product\r\n    Modal.confirm({\r\n      title: `Are you sure you want to delete ${product.name}`,\r\n      onOk: async () => {\r\n        ProductService.deleteProduct(product.name)\r\n        .then(() => {\r\n          const index = products.indexOf(product);\r\n          const updatedProducts = [...products.slice(0, index), ...products.slice(index + 1)];\r\n          this.setState({ products: updatedProducts, count: updatedProducts.length });\r\n          Modal.success({\r\n            content: 'Product has been successfully deleted.',\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  resetFilter() {\r\n    this.setState({ searchValue: '', fromDateFilter: null, toDateFilter: null })\r\n  }\r\n\r\n  render() {\r\n    const { searchValue, products, count, addProductVisible, addProductError, editProductVisible, editProductError, toBeEdited, fromDateFilter, toDateFilter } = this.state;\r\n    return <div id='admin-inventory'>\r\n    <div className='header'>\r\n      <div className='left'>\r\n        <input \r\n          className=\"search-input\" \r\n          placeholder=\"Search\" \r\n          onChange={(e) => this.setState({ searchValue: e.target.value })} \r\n          value={searchValue} \r\n        />\r\n        <RangePicker \r\n          ranges={{\r\n            'Today': [moment(), moment()],\r\n            'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n          }}\r\n          value={[fromDateFilter, toDateFilter]} \r\n          onChange={(val) => this.setState({ fromDateFilter: val === null ? null : val[0], toDateFilter: val === null ? null : val[1]})} \r\n          bordered={false} \r\n        />\r\n        <button \r\n          className=\"header-product-button\" \r\n          onClick={() => this.resetFilter()}\r\n        >\r\n          Reset Filter\r\n        </button>\r\n        <button \r\n          className=\"header-product-button\" \r\n          onClick={() => this.setState({ addProductVisible: true })}\r\n        >\r\n          Add Product\r\n        </button>\r\n      </div>\r\n      <div className=\"product-stats\">\r\n        Products: <span className=\"count\">{count}</span>\r\n      </div>\r\n    </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Date Purchased</th>\r\n            <th>Product Name</th>\r\n            <th>Supplier</th>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n            <th>Location</th>\r\n            <th>Operations</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            // maps per product to the table\r\n            products.filter((item) => (item.name.toLowerCase().includes(searchValue.toLowerCase()) && (fromDateFilter === null || toDateFilter === null || (moment(item.date) >= fromDateFilter && moment(item.date) <= toDateFilter)))).map((item) => (\r\n                <tr key={item.name}>\r\n                  <td>{item.dateString}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.supplier}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>P {parseFloat(item.price).toLocaleString('en-US', { minimumFractionDigits: 2 })}</td>\r\n                  <td>{item.location}</td>\r\n                  <td>\r\n                    <button \r\n                      className=\"edit-button\" \r\n                      onClick={() => this.setState({ editProductVisible: true, toBeEdited: item })}\r\n                    >\r\n                      <img src={editIcon} alt=\"Edit\" />\r\n                    </button>\r\n                    <button \r\n                      className=\"delete-button\" \r\n                      onClick={() => this.onDelete(item)} \r\n                    >\r\n                      <img src={trashIcon} alt=\"Delete\" />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            )\r\n          }\r\n        </tbody>\r\n      </table>\r\n      <AddProduct \r\n        errorMessage={addProductError} \r\n        visible={addProductVisible}\r\n        onOk={(productName, quantity, price, supplier, location, datePurchased) => this.addProduct(productName, quantity, price, supplier, location, datePurchased)}\r\n        onCancel={() => this.setState({ addProductVisible: false, addProductError: '' })}\r\n      />\r\n      <EditProduct \r\n        product={toBeEdited}\r\n        errorMessage={editProductError}\r\n        visible={editProductVisible} \r\n        onOk={(productName, quantity, price, supplier, location, datePurchased) => this.editProduct(productName, quantity, price, supplier, location, datePurchased)}\r\n        onCancel={() => this.setState({ editProductVisible: false, editProductError: '' })}\r\n      />\r\n    </div>\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport { DatePicker } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { ProductService } from '../services';\r\n\r\nimport '../assets/styles/pages/UserInventory.css';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class UserInventory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchValue: '',\r\n      products: [],\r\n      fromDateFilter: null,\r\n      toDateFilter: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    ProductService.getAllProducts().then((res) => {\r\n      const { result: products } = res.data;\r\n\r\n      this.setState({ products });\r\n    })\r\n  }\r\n\r\n  resetFilter() {\r\n    this.setState({ searchValue: '', fromDateFilter: null, toDateFilter: null })\r\n  }\r\n\r\n  render() {\r\n    const { searchValue, products, fromDateFilter, toDateFilter } = this.state;\r\n\r\n    return (\r\n    <div id='user-inventory'>\r\n    <div className=\"header\">\r\n      <div>\r\n        <input \r\n          className=\"search-input\" \r\n          placeholder=\"Search\" \r\n          onChange={(e) => this.setState({ searchValue: e.target.value })} \r\n          value={searchValue} \r\n        />\r\n        <RangePicker \r\n          ranges={{\r\n            Today: [moment(), moment()],\r\n            'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n          }}\r\n          value={[fromDateFilter, toDateFilter]} \r\n          onChange={(val) => this.setState({ fromDateFilter: val === null ? null : val[0], toDateFilter: val === null ? null : val[1]})} \r\n          bordered={false} \r\n        />\r\n        <button \r\n          className=\"header-product-button\" \r\n          onClick={() => this.resetFilter()}\r\n        >\r\n          Reset Filter\r\n        </button>\r\n      </div>\r\n      <></>\r\n    </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Product Name</th>\r\n            <th>Supplier</th>\r\n            <th>Quantity</th>\r\n            <th>Date Purchased</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            // maps per user to the table\r\n            products.filter((item) => (item.name.toLowerCase().includes(searchValue.toLowerCase()) && (fromDateFilter === null || toDateFilter === null || (moment(item.date) >= fromDateFilter && moment(item.date) <= toDateFilter)))).map((item) => (\r\n                <tr key={item.name}>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.supplier}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.dateString}</td>\r\n                </tr>\r\n              )\r\n            )\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )};\r\n};","import React, { useState } from 'react';\r\nimport { Checkbox, Modal } from 'antd';\r\n\r\nimport { UserService } from '../services';\r\nimport { getUser, setUserLocal } from '../utils/store';\r\n\r\nimport '../assets/styles/pages/UserEditAccount.css';\r\n\r\nconst UserEditAccount = ({ updateUser }) => {\r\n  const user = getUser();\r\n\r\n  const [username, setUsername] = useState(user.username);\r\n  const [previousPassword, setPreviousPassword] = useState('');\r\n  const [editPasswordFlag, setEditPasswordFlag] = useState(false);\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const onConfirm = (e) => {\r\n    e.preventDefault()\r\n    setPreviousPassword('')\r\n    setNewPassword('')\r\n    setConfirmNewPassword('')\r\n\r\n    if(username === '' || username === null) {\r\n      setErrorMessage(\"Username cannot be empty\")\r\n       (user.username)\r\n      return;\r\n    } else if(username.length < 6) {\r\n      setErrorMessage(\"Username has to be atleast 6 characters\")\r\n      setUsername(user.username)\r\n      return;\r\n    } else if(username.length > 30) {\r\n      setErrorMessage(\"Username has to be atmost 30 characters\")\r\n      setUsername(user.username)\r\n      return;\r\n    } else if(username.includes(' ')) {\r\n      setErrorMessage(\"Username cannot contain a space\")\r\n      setUsername(user.username)\r\n      return;\r\n    } \r\n\r\n    if(editPasswordFlag) {\r\n      if(previousPassword === '' || previousPassword === null) {\r\n        setErrorMessage('Previous password cannot be empty')\r\n        return \r\n      }\r\n  \r\n      if(newPassword === '' || newPassword === null) {\r\n        setErrorMessage('Previous password cannot be empty')\r\n        return \r\n      }\r\n  \r\n      if(confirmNewPassword === '' || confirmNewPassword === null) {\r\n        setErrorMessage('Previous password cannot be empty')\r\n        return \r\n      }\r\n  \r\n      if(previousPassword.length < 6 || newPassword.length < 6 || confirmNewPassword.length < 6) {\r\n        setErrorMessage('Password has to be atleast 6 characters')\r\n        return \r\n      }\r\n  \r\n      if(previousPassword.length > 30 || newPassword.length > 30 || confirmNewPassword.length > 30) {\r\n        setErrorMessage('Password has to be atmost 30 characters')\r\n        return \r\n      }\r\n  \r\n      if(previousPassword === newPassword && previousPassword === confirmNewPassword) {\r\n        setErrorMessage('Previous password and the new password is the same')\r\n        return \r\n      }\r\n  \r\n      if(newPassword !== confirmNewPassword) {\r\n        setErrorMessage('New password and confirm new password must be the same.')\r\n        return \r\n      }\r\n    } else {\r\n      if(username === user.username) {\r\n        setErrorMessage(\"Username cannot be the same\")\r\n        return;\r\n      }\r\n    }\r\n\r\n    UserService.patchUser(user._id, username, 'user', editPasswordFlag ? previousPassword : null, editPasswordFlag ? newPassword : null)\r\n      .then((res) => {\r\n        const { result } = res.data;\r\n\r\n        setUserLocal(result)\r\n        setErrorMessage('');\r\n        updateUser(result.username)\r\n        Modal.success({\r\n          content: 'Successfully edited the account',\r\n        });\r\n      }) \r\n      .catch((err) => {\r\n        const { data } = err.response;\r\n\r\n        setErrorMessage(data)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div id='user-edit-account'>\r\n      <h1>Edit Account</h1>\r\n      <input \r\n        placeholder='Username' \r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value.trim())}\r\n        onKeyPress={(e) => e.key === 'Enter' && onConfirm(e)}\r\n      />\r\n      <br /><br />\r\n      <Checkbox checked={editPasswordFlag} onChange={(e) => setEditPasswordFlag(e.target.checked)}>Edit Password</Checkbox>\r\n      <br />\r\n      <input \r\n        type='password'\r\n        placeholder='Previous Password' \r\n        value={previousPassword} \r\n        onChange={(e) => setPreviousPassword(e.target.value.trim())}\r\n        disabled={!editPasswordFlag}\r\n        onKeyPress={(e) => e.key === 'Enter' && onConfirm(e)}\r\n      />\r\n      <br />\r\n      <input \r\n        type='password'\r\n        placeholder='New Password' \r\n        value={newPassword} \r\n        onChange={(e) => setNewPassword(e.target.value.trim())}\r\n        disabled={!editPasswordFlag}\r\n        onKeyPress={(e) => e.key === 'Enter' && onConfirm(e)}\r\n      />\r\n      <input \r\n        type='password'\r\n        placeholder='Confirm New Password' \r\n        value={confirmNewPassword} \r\n        onChange={(e) => setConfirmNewPassword(e.target.value.trim())}\r\n        disabled={!editPasswordFlag}\r\n        onKeyPress={(e) => e.key === 'Enter' && onConfirm(e)}\r\n      />\r\n      <div className='error-message'>{errorMessage}</div>\r\n      <button className='confirm-button' onClick={(e) => onConfirm(e)}>Confirm</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserEditAccount;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { LOGIN_FALLBACK, USER_FALLBACK } from './constants';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // checks if user is logged in\r\n      if (getUser()) {\r\n        // checks if user is a user, if he is, he'll be redirected to user page\r\n        if (getUser().userType === 'user') {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: USER_FALLBACK,\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        // if not, then the user will see the admin page\r\n        return <Component {...props} />;\r\n      }\r\n      // if user is logged out, redirect to login page\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: LOGIN_FALLBACK,\r\n            state: {\r\n              from: props.location,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default AdminRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { LOGIN_FALLBACK } from './constants';\r\n\r\nconst UserRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // checks if user is logged in\r\n      if (getUser()) {\r\n\r\n        // if not, then the user will see the user page\r\n        return <Component {...props} />;\r\n      }\r\n      // if user is logged out, redirect to login page\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: LOGIN_FALLBACK,\r\n            state: {\r\n              from: props.location,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default UserRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { ADMIN_FALLBACK, USER_FALLBACK } from './constants';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // if user is not logged in, stay in the login page\r\n      if (!getUser()) return <Component {...props} />;\r\n      // check if user is an admin, if yes, then user will be redirected to admin page\r\n      if (getUser().userType === 'admin') return <Redirect to={{ pathname: ADMIN_FALLBACK }} />;\r\n      // if user is user, then user will be redirected to the user page\r\n      return <Redirect to={{ pathname: USER_FALLBACK }} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PublicRoute;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Navbar } from './components';\r\nimport { Login, Users, AdminInventory, UserInventory, UserEditAccount } from './pages';\r\nimport { AdminRoute, UserRoute, PublicRoute } from './utils';\r\nimport { getUser } from './utils/store';\r\n\r\nimport './assets/styles/App.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ username: getUser() ? getUser().username : '' })\r\n  }\r\n\r\n  render() {\r\n    const { username } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <AdminRoute path=\"/users\" component={() => <Navbar username={username}/>} />\r\n            <UserRoute path=\"/inventory\" component={() => <Navbar username={username}/>} />\r\n            <UserRoute path=\"/edit\" component={() => <Navbar username={username}/>} />\r\n            <Route path=\"/\" component={() => <></>} />\r\n          </Switch>\r\n          <Switch>\r\n            <AdminRoute path=\"/users\" component={() => <Users updateUser={(username) => this.setState({ username })} />} />\r\n            <UserRoute path=\"/inventory\" component={getUser() ? (getUser().userType === 'user' ? UserInventory : AdminInventory) : null} />\r\n            <UserRoute path=\"/edit\" component={() => <UserEditAccount updateUser={(username) => this.setState({ username })} />} />\r\n            <PublicRoute path=\"/\" component={Login} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from \"react-dom\";\r\nimport './assets/styles/index.css';\r\nimport App from './App';\r\n\r\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}