{"version":3,"sources":["services/UserService.js","utils/store.js","components/Navbar.js","assets/images/login_image.svg","pages/Login.js","pages/Users.js","pages/Inventory.js","utils/constants.js","utils/AdminRoute.js","utils/UserRoute.js","utils/PublicRoute.js","App.js","index.js"],"names":["USER_API_BASE_URL","UserService","getAllUsers","axios","get","postRegister","user","post","postLogin","postLogout","getUser","localStorage","getItem","JSON","parse","Navbar","onLogout","then","res","status","removeItem","window","location","reload","console","log","pathname","id","className","userType","href","onClick","Login","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","setItem","stringify","setUserLocal","data","catch","err","response","type","placeholder","value","onChange","e","target","src","loginImage","alt","Users","Inventory","USER_FALLBACK","AdminRoute","Component","component","rest","render","props","to","state","from","UserRoute","PublicRoute","App","path","document","getElementById"],"mappings":"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","file":"static/js/main.4836e432.chunk.js","sourcesContent":["/* Contains the functions to requests to URL Paths in relation to the `users` collection */\r\n\r\nimport axios from \"axios\";\r\n\r\nconst USER_API_BASE_URL = \"/api/users\";\r\n\r\nconst UserService = {\r\n  getAllUsers: () => axios.get(USER_API_BASE_URL),\r\n  postRegister: (user) => axios.post(`${USER_API_BASE_URL}/register`, user),\r\n  postLogin: (user) => axios.post(`${USER_API_BASE_URL}/login`, user),\r\n  postLogout: () => axios.post(`${USER_API_BASE_URL}/logout`),\r\n}\r\n\r\nexport default UserService;","// local storage for the user\r\n\r\n/* ---------------- USER ------------------*/\r\n\r\n// return the user data from the local storage\r\nexport const getUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  if (user) return JSON.parse(user);\r\n  return null;\r\n};\r\n\r\n// remove the token and user from the local storage\r\nexport const removeLocalUser = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// set the token and user from the local storage\r\nexport const setUserLocal = (user) => {\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n};","import React from 'react';\nimport UserService from '../services/UserService';\nimport { getUser, removeLocalUser } from '../utils/store';\n\nimport '../assets/styles/components/Navbar.css';\n\nconst Navbar = () => {\n  const onLogout = () => {\n    UserService.postLogout()\n      .then((res) => {\n        if(res.status === 200) {\n          removeLocalUser();\n          window.location.reload();\n        } else {\n          console.log(\"There was an error logging out...\");\n        } \n      })\n  }\n\n  console.log(window.location.pathname)\n\n  return <div id=\"navbar\">\n    <div className=\"left\" />\n    <div className=\"middle\">\n      {getUser().userType === \"admin\" ? <a href=\"/users\" className={window.location.pathname === '/users' ? \"active\" : \"\"}>Users</a> : <></>}\n      <a href=\"/inventory\" className={window.location.pathname === '/inventory' ? \"active\" : \"\"}>Inventory</a>\n    </div>\n    <button className=\"logout-button\" onClick={() => onLogout()}>Log out</button>\n  </div>\n}\n\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/login_image.6954d3e8.svg\";","import React, { useState } from 'react';\r\n\r\nimport UserService from '../services/UserService';\r\n\r\nimport { setUserLocal } from '../utils/store';\r\n\r\nimport loginImage from '../assets/images/login_image.svg';\r\n\r\nimport '../assets/styles/pages/Login.css';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // calls this when logging in\r\n  const onClick = () => {\r\n    const user = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    if(username === '') {\r\n      setErrorMessage(\"Username is empty\");\r\n      return;\r\n    }\r\n\r\n    if(password === '') {\r\n      setErrorMessage(\"Password is empty\");\r\n      return;\r\n    }\r\n\r\n    UserService.postLogin(user)\r\n      .then((res) => {\r\n        if(res.status === 200) {\r\n          const user = {\r\n            username,\r\n            password,\r\n            userType: res.data.userType,\r\n          }\r\n          setUserLocal(user);\r\n          window.location.reload();\r\n        } \r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 401) {\r\n          setErrorMessage(\"Invalid username or password\");  \r\n        }\r\n      })\r\n  }\r\n\r\n  return <div id=\"login-page\">\r\n    <div className=\"card\">\r\n      <p className=\"title\">Login</p>\r\n      <p className=\"sub-title\">Welcome back!</p>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Username\"\r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)} \r\n      />\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"Password\"\r\n        value={password} \r\n        onChange={(e) => setPassword(e.target.value)} \r\n      />\r\n      <p className=\"error-message\">{errorMessage}</p>\r\n      <img src={loginImage} alt=\"Login\" />\r\n      <button onClick={() => onClick()}>Sign in</button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nimport '../assets/styles/pages/Users.css';\r\n\r\nconst Users = () => {\r\n  return <div>\r\n    <h1>Users Page</h1>\r\n  </div>\r\n};\r\n\r\nexport default Users;","import React from 'react';\r\n\r\nimport '../assets/styles/pages/Inventory.css';\r\n\r\nconst Inventory = () => {\r\n  return <div>\r\n    <h1>Inventory Page</h1>\r\n  </div>\r\n};\r\n\r\nexport default Inventory;","const LOGIN_FALLBACK = '/';\r\nconst ADMIN_FALLBACK = '/users';\r\nconst USER_FALLBACK = '/inventory';\r\n\r\nexport { \r\n  LOGIN_FALLBACK,\r\n  ADMIN_FALLBACK,\r\n  USER_FALLBACK \r\n};","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { LOGIN_FALLBACK, USER_FALLBACK } from './constants';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // checks if user is logged in\r\n      if (getUser()) {\r\n        // checks if user is a user, if he is, he'll be redirected to user page\r\n        if (getUser().userType === 'user') {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: USER_FALLBACK,\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        // if not, then the user will see the admin page\r\n        return <Component {...props} />;\r\n      }\r\n      // if user is logged out, redirect to login page\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: LOGIN_FALLBACK,\r\n            state: {\r\n              from: props.location,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default AdminRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { LOGIN_FALLBACK } from './constants';\r\n\r\nconst UserRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // checks if user is logged in\r\n      if (getUser()) {\r\n\r\n        // if not, then the user will see the user page\r\n        return <Component {...props} />;\r\n      }\r\n      // if user is logged out, redirect to login page\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: LOGIN_FALLBACK,\r\n            state: {\r\n              from: props.location,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default UserRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { ADMIN_FALLBACK, USER_FALLBACK } from './constants';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // if user is not logged in, stay in the login page\r\n      if (!getUser()) return <Component {...props} />;\r\n      // check if user is an admin, if yes, then user will be redirected to admin page\r\n      if (getUser().userType === 'admin') return <Redirect to={{ pathname: ADMIN_FALLBACK }} />;\r\n      // if user is user, then user will be redirected to the user page\r\n      return <Redirect to={{ pathname: USER_FALLBACK }} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PublicRoute;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Navbar } from './components';\r\nimport { Login, Users, Inventory } from './pages';\r\nimport { AdminRoute, UserRoute, PublicRoute } from './utils';\r\n\r\nimport './assets/styles/App.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <AdminRoute path=\"/users\" component={Navbar} />\r\n            <UserRoute path=\"/inventory\" component={Navbar} />\r\n            <Route path=\"/\" component={() => <></>} />\r\n          </Switch>\r\n          <Switch>\r\n            <AdminRoute path=\"/users\" component={Users} />\r\n            <UserRoute path=\"/inventory\" component={Inventory} />\r\n            <PublicRoute path=\"/\" component={Login} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from \"react-dom\";\r\nimport './assets/styles/index.css';\r\nimport App from './App';\r\n\r\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}