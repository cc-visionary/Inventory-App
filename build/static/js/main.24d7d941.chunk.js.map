{"version":3,"sources":["services/UserService.js","utils/store.js","components/Navbar.js","components/AddAccount.js","components/EditPassword.js","assets/images/Login Image.svg","pages/Login.js","assets/images/Edit Icon.svg","assets/images/Trash Icon.svg","pages/Users.js","pages/Inventory.js","utils/constants.js","utils/AdminRoute.js","utils/UserRoute.js","utils/PublicRoute.js","App.js","index.js"],"names":["USER_API_BASE_URL","UserService","getAllUsers","axios","get","postRegister","username","post","postLogin","user","postLogout","patchUser","previousPassword","newPassword","patch","deleteUser","delete","getUser","localStorage","getItem","JSON","parse","Navbar","onLogout","then","res","status","removeItem","window","location","reload","console","log","id","className","userType","href","pathname","onClick","AddAccount","errorMessage","visible","onOk","onCancel","useState","setUsername","clearFields","handleOk","title","okText","value","onChange","e","target","placeholder","onKeyPress","key","style","color","EditAccount","setPreviousPassword","setNewPassword","confirmPassword","setConfirmPassword","Login","password","setPassword","setErrorMessage","onSignin","setItem","stringify","setUserLocal","data","catch","err","response","type","src","loginImage","alt","Users","props","state","users","searchValue","count","addAccountVisible","editPasswordVisible","addAccountError","editPasswordError","toBeEdited","result","setState","map","length","confirmNewPassword","this","Modal","confirm","a","index","indexOf","newUsers","slice","info","content","error","code","filter","includes","editIcon","onDelete","disabled","trashIcon","addAccount","EditPassword","onEdit","Component","Inventory","USER_FALLBACK","AdminRoute","component","rest","render","to","from","UserRoute","PublicRoute","App","path","document","getElementById"],"mappings":"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","file":"static/js/main.24d7d941.chunk.js","sourcesContent":["/* Contains the functions to requests to URL Paths in relation to the `users` collection */\r\n\r\nimport axios from \"axios\";\r\n\r\nconst USER_API_BASE_URL = \"/api/users\";\r\n\r\nconst UserService = {\r\n  getAllUsers: () => axios.get(USER_API_BASE_URL),\r\n  postRegister: (username) => axios.post(`${USER_API_BASE_URL}/register`, { username }),\r\n  postLogin: (user) => axios.post(`${USER_API_BASE_URL}/login`, user),\r\n  postLogout: () => axios.post(`${USER_API_BASE_URL}/logout`),\r\n  patchUser: (username, previousPassword, newPassword) => axios.patch(`${USER_API_BASE_URL}`, {username, previousPassword, newPassword}), \r\n  deleteUser: (username) => axios.delete(`${USER_API_BASE_URL}/${username}`),\r\n}\r\n\r\nexport default UserService;","// local storage for the user\r\n\r\n/* ---------------- USER ------------------*/\r\n\r\n// return the user data from the local storage\r\nexport const getUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  if (user) return JSON.parse(user);\r\n  return null;\r\n};\r\n\r\n// remove the token and user from the local storage\r\nexport const removeLocalUser = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// set the token and user from the local storage\r\nexport const setUserLocal = (user) => {\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n};","import React from 'react';\r\n\r\nimport { UserService } from '../services';\r\nimport { getUser, removeLocalUser } from '../utils/store';\r\n\r\nimport '../assets/styles/components/Navbar.css';\r\n\r\nconst Navbar = () => {\r\n  const onLogout = () => {\r\n    UserService.postLogout()\r\n      .then((res) => {\r\n        if(res.status === 200) {\r\n          removeLocalUser();\r\n          window.location.reload();\r\n        } else {\r\n          console.log(\"There was an error logging out...\");\r\n        } \r\n      })\r\n  }\r\n\r\n  return <div id=\"navbar\">\r\n    <div className=\"left\" />\r\n    <div className=\"middle\">\r\n      {getUser().userType === \"admin\" ? <a href=\"/users\" className={window.location.pathname === '/users' ? \"active\" : \"\"}>Accounts</a> : <></>}\r\n      <a href=\"/inventory\" className={window.location.pathname === '/inventory' ? \"active\" : \"\"}>Inventory</a>\r\n    </div>\r\n    <button className=\"logout-button\" onClick={() => onLogout()}>Log out</button>\r\n  </div>\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\n\r\nimport { Modal, Input } from 'antd';\r\n\r\nconst AddAccount = ({ errorMessage, visible, onOk, onCancel }) => {\r\n  const [username, setUsername] = useState('');\r\n\r\n  const clearFields = () => {\r\n    setUsername('');\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(username);\r\n    clearFields();\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n    clearFields();\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      title=\"Add Account\" \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Create\" \r\n      onCancel={handleCancel}\r\n    >\r\n      <label><strong>Username</strong></label>\r\n      <Input \r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)} \r\n        placeholder=\"Enter username\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n      <p>Note: Password will automatically generated.</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default AddAccount;","import React, { useState } from 'react';\r\n\r\nimport { Modal, Input } from 'antd';\r\n\r\nconst EditAccount = ({ username, errorMessage, visible, onOk, onCancel }) => {\r\n  const [previousPassword, setPreviousPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const clearFields = () => {\r\n    setPreviousPassword('');\r\n    setNewPassword('');\r\n    setConfirmPassword('');\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(previousPassword, newPassword, confirmPassword);\r\n    clearFields();\r\n  }\r\n\r\n  const handleClose = () => {\r\n    onCancel();\r\n    clearFields();\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      title={`Edit ${username}'s Password`} \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Confirm\" \r\n      onCancel={handleClose}\r\n    >\r\n      <label><strong>Previous Password</strong></label>\r\n      <Input \r\n        value={previousPassword} \r\n        onChange={(e) => setPreviousPassword(e.target.value)} \r\n        placeholder=\"Enter previous password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <br /><br />\r\n      <label><strong>New Password</strong></label>\r\n      <Input \r\n        value={newPassword} \r\n        onChange={(e) => setNewPassword(e.target.value)} \r\n        placeholder=\"Enter current password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <label><strong>Confirm Password</strong></label>\r\n      <Input \r\n        value={confirmPassword} \r\n        onChange={(e) => setConfirmPassword(e.target.value)} \r\n        placeholder=\"Confirm your password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default EditAccount;","export default __webpack_public_path__ + \"static/media/Login Image.6954d3e8.svg\";","import React, { useState } from 'react';\r\n\r\nimport { UserService } from '../services';\r\nimport { setUserLocal } from '../utils/store';\r\n\r\nimport loginImage from '../assets/images/Login Image.svg';\r\n\r\nimport '../assets/styles/pages/Login.css';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // calls this when logging in\r\n  const onSignin = () => {\r\n    const user = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    if(username === '') {\r\n      setErrorMessage(\"Username is empty\");\r\n      return;\r\n    }\r\n\r\n    if(password === '') {\r\n      setErrorMessage(\"Password is empty\");\r\n      return;\r\n    }\r\n\r\n    UserService.postLogin(user)\r\n      .then((res) => {\r\n        if(res.status === 200) {\r\n          const user = {\r\n            username,\r\n            userType: res.data.userType,\r\n          }\r\n          setUserLocal(user);\r\n          window.location.reload();\r\n        } \r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 401) {\r\n          setErrorMessage(\"Invalid username or password\");  \r\n        }\r\n      })\r\n  }\r\n\r\n  return <div id=\"login-page\">\r\n    <div className=\"card\">\r\n      <p className=\"title\">Login</p>\r\n      <p className=\"sub-title\">Welcome back!</p>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Username\"\r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)} \r\n        onKeyPress={(e) => e.key === 'Enter' && onSignin()}\r\n      />\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"Password\"\r\n        value={password} \r\n        onChange={(e) => setPassword(e.target.value)} \r\n        onKeyPress={(e) => e.key === 'Enter' && onSignin()}\r\n      />\r\n      <p className=\"error-message\">{errorMessage}</p>\r\n      <img src={loginImage} alt=\"Login\" />\r\n      <button onClick={() => onSignin()}>Sign in</button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/Edit Icon.7ee14592.svg\";","export default __webpack_public_path__ + \"static/media/Trash Icon.5db8102e.svg\";","import React, { Component } from 'react';\r\n\r\nimport { AddAccount, EditPassword } from '../components';\r\nimport { UserService } from '../services';\r\n\r\nimport editIcon from '../assets/images/Edit Icon.svg';\r\nimport trashIcon from '../assets/images/Trash Icon.svg';\r\n\r\nimport '../assets/styles/pages/Users.css';\r\nimport { Modal } from 'antd';\r\n\r\nexport default class Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      searchValue: '',\r\n      count: 0,\r\n      addAccountVisible: false,\r\n      editPasswordVisible: false,\r\n      addAccountError: '',\r\n      editPasswordError: '',\r\n      toBeEdited: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAllUsers()\r\n      .then((res) => {\r\n        const { result: users } = res.data;\r\n\r\n        this.setState({ users: users.map(user => ({username: user.username, userType: user.userType})), count: users.length });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  onEdit(previousPassword, newPassword, confirmNewPassword) {\r\n    const { toBeEdited } = this.state;\r\n\r\n    if(toBeEdited != null) {\r\n      if(previousPassword === '' || previousPassword === null) {\r\n        this.setState({ editPasswordError: \"Previous password is empty\" });\r\n        return;\r\n      }\r\n\r\n      if(newPassword === '' || newPassword === null) {\r\n        this.setState({ editPasswordError: \"New password is empty\" });\r\n        return;\r\n      }\r\n\r\n      if(confirmNewPassword === '' || confirmNewPassword === null) {\r\n        this.setState({ editPasswordError: \"Confirm password is empty\" });\r\n        return;\r\n      }\r\n\r\n      if(previousPassword.length < 6 || newPassword.length < 6 || confirmNewPassword.length < 6) {\r\n        this.setState({ editPasswordError: \"Password has to be atleast 6 characters\" });\r\n        return \r\n      }\r\n  \r\n      if(previousPassword.length > 30 || newPassword.length > 30 || confirmNewPassword.length > 30) {\r\n        this.setState({ editPasswordError: \"Password has to be atmost 30 characters\" });\r\n        return \r\n      }\r\n\r\n      if(newPassword !== confirmNewPassword) {\r\n        this.setState({ editPasswordError: \"New password and confirm password doesn't match\" });\r\n        return;\r\n      }\r\n\r\n      UserService.patchUser(toBeEdited, previousPassword, newPassword)\r\n        .then((res) => {\r\n          this.setState({ editPasswordVisible: false, toBeEdited: null });\r\n        }) \r\n        .catch((err) => {\r\n          const { data } = err.response;\r\n\r\n          this.setState({ editPasswordError: data });\r\n        })\r\n    }\r\n  }\r\n\r\n  onDelete(user) {\r\n    const { users } = this.state;\r\n\r\n    // asks for admin confirmation on whether or not to delete the user\r\n    Modal.confirm({\r\n      title: `Are you sure you want to delete ${user.username}`,\r\n      onOk: async () => {\r\n        UserService.deleteUser(user.username)\r\n        .then((res) => {\r\n          const index = users.indexOf(user);\r\n          const newUsers = [...users.slice(0, index), ...users.slice(index + 1)];\r\n          this.setState({ users: newUsers, count: newUsers.length });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  addAccount(username) {\r\n    if(username === '' || username === null) {\r\n      this.setState({ addAccountError: \"Username is empty\" })\r\n      return;\r\n    } else if(username.length < 6) {\r\n      this.setState({ addAccountError: \"Username has to be atleast 6 characters\" })\r\n      return;\r\n    } else if(username.length > 30) {\r\n      this.setState({ addAccountError: \"Username has to be atmost 30 characters\" })\r\n      return;\r\n    }\r\n\r\n    UserService.postRegister(username)\r\n      .then((res) => {\r\n        const { password } = res.data;\r\n\r\n        this.setState({ \r\n          users: [...this.state.users, {username, userType: 'user'}], \r\n          count: this.state.count + 1,\r\n          addAccountVisible: false,\r\n          addAccountError: \"\",\r\n        })\r\n\r\n        Modal.info({\r\n          title: \"Password\",\r\n          content: (\r\n            <div>Password: {password}</div>\r\n          ),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        const { error } = err.response.data;\r\n        if(error.code === 11000) {\r\n          this.setState({ addAccountError: \"Username already exists\" })\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { users, searchValue, count, addAccountVisible, addAccountError, editPasswordVisible, editPasswordError, toBeEdited } = this.state;\r\n\r\n    return <div id=\"users-page\">\r\n    <div className=\"header\">\r\n      <div>\r\n        <input \r\n          className=\"search-input\" \r\n          placeholder=\"Search\" \r\n          onChange={(e) => this.setState({ searchValue: e.target.value })} \r\n          value={searchValue} \r\n        />\r\n        <button \r\n          className=\"add-account-button\" \r\n          onClick={() => this.setState({ addAccountVisible: true })}\r\n        >\r\n          Add Account\r\n        </button>\r\n      </div>\r\n      <div className=\"user-stats\">\r\n        Accounts: <span className=\"count\">{count}</span>\r\n      </div>\r\n    </div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Username</th>\r\n          <th>Role</th>\r\n          <th>Operations</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          // maps per user to the table\r\n          users.filter((user) => user.username.includes(searchValue)).map((user) => (\r\n              <tr>\r\n                <td>{user.username}</td>\r\n                <td>{user.userType}</td>\r\n                <td>\r\n                  <button \r\n                    className=\"edit-button\" \r\n                    onClick={() => this.setState({ editPasswordVisible: true, toBeEdited: user.username })}\r\n                  >\r\n                    <img src={editIcon} alt=\"Edit\" />\r\n                  </button>\r\n                  <button \r\n                    className=\"delete-button\" \r\n                    onClick={() => this.onDelete(user)} \r\n                    disabled={user === \"admin\"}\r\n                  >\r\n                    <img src={trashIcon} alt=\"Delete\" />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          )\r\n        }\r\n      </tbody>\r\n    </table>\r\n    <AddAccount \r\n      visible={addAccountVisible} \r\n      onOk={(username) => this.addAccount(username)} \r\n      onCancel={() => this.setState({ addAccountVisible: false })} \r\n      errorMessage={addAccountError}\r\n    />\r\n    <EditPassword \r\n      username={toBeEdited}\r\n      visible={editPasswordVisible}\r\n      onOk={(previousPassword, newPassword, confirmNewPassword) => this.onEdit(previousPassword, newPassword, confirmNewPassword)}\r\n      onCancel={() => this.setState({ editPasswordVisible: false })}\r\n      errorMessage={editPasswordError}\r\n    />\r\n  </div>\r\n  }\r\n};","import React from 'react';\r\n\r\nimport '../assets/styles/pages/Inventory.css';\r\n\r\nconst Inventory = () => {\r\n  return <div>\r\n    <h1>Inventory Page</h1>\r\n  </div>\r\n};\r\n\r\nexport default Inventory;","const LOGIN_FALLBACK = '/';\r\nconst ADMIN_FALLBACK = '/users';\r\nconst USER_FALLBACK = '/inventory';\r\n\r\nexport { \r\n  LOGIN_FALLBACK,\r\n  ADMIN_FALLBACK,\r\n  USER_FALLBACK \r\n};","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { LOGIN_FALLBACK, USER_FALLBACK } from './constants';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // checks if user is logged in\r\n      if (getUser()) {\r\n        // checks if user is a user, if he is, he'll be redirected to user page\r\n        if (getUser().userType === 'user') {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: USER_FALLBACK,\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        // if not, then the user will see the admin page\r\n        return <Component {...props} />;\r\n      }\r\n      // if user is logged out, redirect to login page\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: LOGIN_FALLBACK,\r\n            state: {\r\n              from: props.location,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default AdminRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { LOGIN_FALLBACK } from './constants';\r\n\r\nconst UserRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // checks if user is logged in\r\n      if (getUser()) {\r\n\r\n        // if not, then the user will see the user page\r\n        return <Component {...props} />;\r\n      }\r\n      // if user is logged out, redirect to login page\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: LOGIN_FALLBACK,\r\n            state: {\r\n              from: props.location,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default UserRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { ADMIN_FALLBACK, USER_FALLBACK } from './constants';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // if user is not logged in, stay in the login page\r\n      if (!getUser()) return <Component {...props} />;\r\n      // check if user is an admin, if yes, then user will be redirected to admin page\r\n      if (getUser().userType === 'admin') return <Redirect to={{ pathname: ADMIN_FALLBACK }} />;\r\n      // if user is user, then user will be redirected to the user page\r\n      return <Redirect to={{ pathname: USER_FALLBACK }} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PublicRoute;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Navbar } from './components';\r\nimport { Login, Users, Inventory } from './pages';\r\nimport { AdminRoute, UserRoute, PublicRoute } from './utils';\r\n\r\nimport './assets/styles/App.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <AdminRoute path=\"/users\" component={Navbar} />\r\n            <UserRoute path=\"/inventory\" component={Navbar} />\r\n            <Route path=\"/\" component={() => <></>} />\r\n          </Switch>\r\n          <Switch>\r\n            <AdminRoute path=\"/users\" component={Users} />\r\n            <UserRoute path=\"/inventory\" component={Inventory} />\r\n            <PublicRoute path=\"/\" component={Login} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from \"react-dom\";\r\nimport './assets/styles/index.css';\r\nimport App from './App';\r\n\r\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}