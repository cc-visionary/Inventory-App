{"version":3,"sources":["services/UserService.js","utils/store.js","components/Navbar.js","components/AddAccount.js","components/AdminEditAccount.js","assets/images/Login Image.svg","pages/Login.js","assets/images/Edit Icon.svg","assets/images/Trash Icon.svg","pages/Users.js","pages/Inventory.js","pages/UserEditAccount.js","utils/constants.js","utils/AdminRoute.js","utils/UserRoute.js","utils/PublicRoute.js","App.js","index.js"],"names":["USER_API_BASE_URL","UserService","getAllUsers","axios","get","postRegister","username","post","postLogin","user","postLogout","patchUser","id","userType","previousPassword","newPassword","patch","deleteUser","delete","getUser","localStorage","getItem","JSON","parse","setUserLocal","setItem","stringify","Navbar","onLogout","then","res","status","removeItem","window","location","reload","console","log","className","href","pathname","onClick","AddAccount","errorMessage","visible","onOk","onCancel","useState","setUsername","clearFields","handleOk","title","okText","value","onChange","e","target","placeholder","onKeyPress","key","style","color","Option","Select","AdminEditAccount","role","setRole","editPasswordFlag","setEditPasswordFlag","setPreviousPassword","setNewPassword","confirmPassword","setConfirmPassword","useEffect","width","val","checked","disabled","Login","password","setPassword","setErrorMessage","onSignin","result","data","catch","err","response","type","src","loginImage","alt","Users","props","state","users","searchValue","count","addAccountVisible","editAccountVisible","addAccountError","editAccountError","toBeEdited","setState","length","confirmNewPassword","this","includes","_id","alert","index","indexOf","slice","Modal","confirm","a","newUsers","info","content","error","code","filter","map","editIcon","onDelete","trashIcon","addAccount","onEdit","Component","Inventory","UserEditAccount","updateUser","setConfirmNewPassword","preventDefault","onConfirm","USER_FALLBACK","AdminRoute","component","rest","render","to","from","UserRoute","PublicRoute","App","path","document","getElementById"],"mappings":"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","file":"static/js/main.836170d0.chunk.js","sourcesContent":["/* Contains the functions to requests to URL Paths in relation to the `users` collection */\r\n\r\nimport axios from \"axios\";\r\n\r\nconst USER_API_BASE_URL = \"/api/users\";\r\n\r\nconst UserService = {\r\n  getAllUsers: () => axios.get(USER_API_BASE_URL),\r\n  postRegister: (username) => axios.post(`${USER_API_BASE_URL}/register`, { username }),\r\n  postLogin: (user) => axios.post(`${USER_API_BASE_URL}/login`, user),\r\n  postLogout: () => axios.post(`${USER_API_BASE_URL}/logout`),\r\n  patchUser: (id, username, userType, previousPassword, newPassword) => axios.patch(`${USER_API_BASE_URL}`, {id, username, userType, previousPassword, newPassword}), \r\n  deleteUser: (id) => axios.delete(`${USER_API_BASE_URL}/${id}`),\r\n}\r\n\r\nexport default UserService;","// local storage for the user\r\n\r\n/* ---------------- USER ------------------*/\r\n\r\n// return the user data from the local storage\r\nexport const getUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  if (user) return JSON.parse(user);\r\n  return null;\r\n};\r\n\r\n// remove the token and user from the local storage\r\nexport const removeLocalUser = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// set the token and user from the local storage\r\nexport const setUserLocal = (user) => {\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n};","import React from 'react';\r\n\r\nimport { UserService } from '../services';\r\nimport { getUser, removeLocalUser } from '../utils/store';\r\n\r\nimport '../assets/styles/components/Navbar.css';\r\n\r\nconst Navbar = ({ username }) => {\r\n  const onLogout = () => {\r\n    UserService.postLogout()\r\n      .then((res) => {\r\n        if(res.status === 200) {\r\n          removeLocalUser();\r\n          window.location.reload();\r\n        } else {\r\n          console.log(\"There was an error logging out...\");\r\n        } \r\n      })\r\n  }\r\n\r\n  return <div id=\"navbar\">\r\n    <div className=\"left\">\r\n      {getUser().userType === \"user\" ? <span>{username}</span> : <></> }\r\n    </div>\r\n    <div className=\"middle\">\r\n      {getUser().userType === \"admin\" ? <a href=\"/users\" className={window.location.pathname === '/users' ? \"active\" : \"\"}>Accounts</a> : <></>}\r\n      <a href=\"/inventory\" className={window.location.pathname === '/inventory' ? \"active\" : \"\"}>Inventory</a>\r\n      {getUser().userType === \"user\" ? <a href=\"/edit\" className={window.location.pathname === '/edit' ? \"active\" : \"\"}>Edit</a> : <></>}\r\n    </div>\r\n    <button className=\"logout-button\" onClick={() => onLogout()}>Log out</button>\r\n  </div>\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\n\r\nimport { Modal, Input } from 'antd';\r\n\r\nconst AddAccount = ({ errorMessage, visible, onOk, onCancel }) => {\r\n  const [username, setUsername] = useState('');\r\n\r\n  const clearFields = () => {\r\n    setUsername('');\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(username);\r\n    clearFields();\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n    clearFields();\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      title=\"Add Account\" \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Create\" \r\n      onCancel={handleCancel}\r\n    >\r\n      <label><strong>Username</strong></label>\r\n      <Input \r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)} \r\n        placeholder=\"Enter username\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n      <p>Note: Password will automatically generated.</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default AddAccount;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Modal, Input, Select, Checkbox } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AdminEditAccount = ({ user, errorMessage, visible, onOk, onCancel }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [editPasswordFlag, setEditPasswordFlag] = useState(false);\r\n  const [previousPassword, setPreviousPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(user != null) {\r\n      setUsername(user.username);\r\n      setRole(user.userType);\r\n    }\r\n  }, [user]);\r\n\r\n  const clearFields = () => {\r\n    setPreviousPassword('');\r\n    setNewPassword('');\r\n    setConfirmPassword('');\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(username, role, editPasswordFlag, previousPassword, newPassword, confirmPassword);\r\n    clearFields();\r\n  }\r\n\r\n  const handleClose = () => {\r\n    onCancel();\r\n    clearFields();\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      title={`Edit ${username}'s Password`} \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Confirm\" \r\n      onCancel={handleClose}\r\n    >\r\n      <label><strong>Username</strong></label>\r\n      <Input \r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)} \r\n        placeholder=\"Enter username\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <br /><br />\r\n      <label><strong>Role</strong></label>\r\n      <br />\r\n      <Select style={{width: '100%'}} value={role} onChange={(val) => setRole(val)}>\r\n        <Option value='user'>user</Option>\r\n        <Option value='admin'>admin</Option>\r\n      </Select>\r\n      <br /><br />\r\n      <Checkbox checked={editPasswordFlag} onChange={(e) => setEditPasswordFlag(e.target.checked)}>Edit Password</Checkbox>\r\n      <br />\r\n      <label><strong>Previous Password</strong></label>\r\n      <Input \r\n        value={previousPassword} \r\n        onChange={(e) => setPreviousPassword(e.target.value)} \r\n        placeholder=\"Enter previous password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <br /><br />\r\n      <label><strong>New Password</strong></label>\r\n      <Input \r\n        value={newPassword} \r\n        onChange={(e) => setNewPassword(e.target.value)} \r\n        placeholder=\"Enter current password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <label><strong>Confirm Password</strong></label>\r\n      <Input \r\n        value={confirmPassword} \r\n        onChange={(e) => setConfirmPassword(e.target.value)} \r\n        placeholder=\"Confirm your password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default AdminEditAccount;\r\n","export default __webpack_public_path__ + \"static/media/Login Image.6954d3e8.svg\";","import React, { useState } from 'react';\r\n\r\nimport { UserService } from '../services';\r\nimport { setUserLocal } from '../utils/store';\r\n\r\nimport loginImage from '../assets/images/Login Image.svg';\r\n\r\nimport '../assets/styles/pages/Login.css';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // calls this when logging in\r\n  const onSignin = () => {\r\n    const user = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    if(username === '') {\r\n      setErrorMessage(\"Username is empty\");\r\n      return;\r\n    }\r\n\r\n    if(password === '') {\r\n      setErrorMessage(\"Password is empty\");\r\n      return;\r\n    }\r\n\r\n    UserService.postLogin(user)\r\n      .then((res) => {\r\n        if(res.status === 200) {\r\n          const { result } = res.data;\r\n          setUserLocal(result);\r\n          window.location.reload();\r\n        } \r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 401) {\r\n          setErrorMessage(\"Invalid username or password\");  \r\n        }\r\n      })\r\n  }\r\n\r\n  return <div id=\"login-page\">\r\n    <div className=\"card\">\r\n      <p className=\"title\">Login</p>\r\n      <p className=\"sub-title\">Welcome back!</p>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Username\"\r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)} \r\n        onKeyPress={(e) => e.key === 'Enter' && onSignin()}\r\n      />\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"Password\"\r\n        value={password} \r\n        onChange={(e) => setPassword(e.target.value)} \r\n        onKeyPress={(e) => e.key === 'Enter' && onSignin()}\r\n      />\r\n      <p className=\"error-message\">{errorMessage}</p>\r\n      <img src={loginImage} alt=\"Login\" />\r\n      <button onClick={() => onSignin()}>Sign in</button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/Edit Icon.7ee14592.svg\";","export default __webpack_public_path__ + \"static/media/Trash Icon.5db8102e.svg\";","import React, { Component } from 'react';\r\n\r\nimport { AddAccount, AdminEditAccount } from '../components';\r\nimport { UserService } from '../services';\r\nimport { Modal } from 'antd';\r\n\r\nimport editIcon from '../assets/images/Edit Icon.svg';\r\nimport trashIcon from '../assets/images/Trash Icon.svg';\r\n\r\nimport '../assets/styles/pages/Users.css';\r\n\r\nexport default class Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      searchValue: '',\r\n      count: 0,\r\n      addAccountVisible: false,\r\n      editAccountVisible: false,\r\n      addAccountError: '',\r\n      editAccountError: '',\r\n      toBeEdited: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAllUsers()\r\n      .then((res) => {\r\n        const { result: users } = res.data;\r\n\r\n        this.setState({ users , count: users.length });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  onEdit(username, userType, editPasswordFlag, previousPassword, newPassword, confirmNewPassword) {\r\n    const { toBeEdited, users } = this.state;\r\n\r\n    if(toBeEdited != null) {\r\n      if(username === '' || username === null) {\r\n        this.setState({ editAccountError: \"Username cannot be empty\" });\r\n        return;\r\n      } else if(username.length < 6) {\r\n        this.setState({ editAccountError: \"Username has to be atleast 6 characters\" })\r\n        return;\r\n      } else if(username.length > 30) {\r\n        this.setState({ editAccountError: \"Username has to be atmost 30 characters\" })\r\n        return;\r\n      } else if(username.includes(' ')) {\r\n        this.setState({ editAccountError: \"Username cannot contain a space\" })\r\n        return;\r\n      } \r\n      \r\n      if(!editPasswordFlag && username === toBeEdited.username && userType === toBeEdited.userType) {\r\n        this.setState({ editAccountError: \"Cannot proceed. No changes has been done\" })\r\n        return;\r\n      }\r\n\r\n      if(userType !== 'user' && userType !== 'admin') {\r\n        this.setState({ editAccountError: \"Role can only be either `user` or `admin`\" })\r\n        return;\r\n      }\r\n\r\n      if(editPasswordFlag) {\r\n        if(previousPassword === '' || previousPassword === null) {\r\n          this.setState({ editAccountError: \"Previous password cannot be empty\" });\r\n          return;\r\n        }\r\n  \r\n        if(newPassword === '' || newPassword === null) {\r\n          this.setState({ editAccountError: \"New password cannot be empty\" });\r\n          return;\r\n        }\r\n  \r\n        if(confirmNewPassword === '' || confirmNewPassword === null) {\r\n          this.setState({ editAccountError: \"Confirm password cannot be empty\" });\r\n          return;\r\n        }\r\n\r\n        console.log([previousPassword, newPassword, confirmNewPassword])\r\n  \r\n        if(previousPassword.length < 6 || newPassword.length < 6 || confirmNewPassword.length < 6) {\r\n          this.setState({ editAccountError: \"Password has to be atleast 6 characters\" });\r\n          return \r\n        }\r\n    \r\n        if(previousPassword.length > 30 || newPassword.length > 30 || confirmNewPassword.length > 30) {\r\n          this.setState({ editAccountError: \"Password has to be atmost 30 characters\" });\r\n          return \r\n        }\r\n  \r\n        if(newPassword !== confirmNewPassword) {\r\n          this.setState({ editAccountError: \"New password and confirm password doesn't match\" });\r\n          return;\r\n        }\r\n      } else {\r\n        previousPassword = null;\r\n        newPassword = null;\r\n      }\r\n\r\n      UserService.patchUser(toBeEdited._id, username, userType, previousPassword, newPassword)\r\n        .then((res) => {\r\n          const { result } = res.data;\r\n\r\n          alert(`Update was successful`)\r\n          \r\n          const index = users.indexOf(toBeEdited);\r\n\r\n          this.setState({ editAccountVisible: false, toBeEdited: null, users: [...users.slice(0, index), result, ...users.slice(index + 1)] });\r\n        }) \r\n        .catch((err) => {\r\n          const { data } = err.response;\r\n\r\n          this.setState({ editAccountError: data });\r\n        })\r\n    }\r\n  }\r\n\r\n  onDelete(user) {\r\n    const { users } = this.state;\r\n\r\n    // asks for admin confirmation on whether or not to delete the user\r\n    Modal.confirm({\r\n      title: `Are you sure you want to delete ${user.username}`,\r\n      onOk: async () => {\r\n        UserService.deleteUser(user._id)\r\n        .then(() => {\r\n          const index = users.indexOf(user);\r\n          const newUsers = [...users.slice(0, index), ...users.slice(index + 1)];\r\n          this.setState({ users: newUsers, count: newUsers.length });\r\n          alert(`Deletion was successful`)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  addAccount(username) {\r\n    const { users, count } = this.state;\r\n\r\n    if(username === '' || username === null) {\r\n      this.setState({ addAccountError: \"Username is empty\" })\r\n      return;\r\n    } else if(username.length < 6) {\r\n      this.setState({ addAccountError: \"Username has to be atleast 6 characters\" })\r\n      return;\r\n    } else if(username.length > 30) {\r\n      this.setState({ addAccountError: \"Username has to be atmost 30 characters\" })\r\n      return;\r\n    } else if(username.includes(' ')) {\r\n      this.setState({ addAccountError: \"Username cannot contain a space\" })\r\n      return;\r\n    }\r\n\r\n    UserService.postRegister(username)\r\n      .then((res) => {\r\n        const { result } = res.data;\r\n\r\n        this.setState({ \r\n          users: [...users, result], \r\n          count: count + 1,\r\n          addAccountVisible: false,\r\n          addAccountError: \"\",\r\n        })\r\n\r\n        Modal.info({\r\n          title: \"Password\",\r\n          content: (\r\n            <div>Password: {result.password}</div>\r\n          ),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        const { error } = err.response.data;\r\n        if(error.code === 11000) {\r\n          this.setState({ addAccountError: \"Username already exists\" })\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { users, searchValue, count, addAccountVisible, addAccountError, editAccountVisible, editAccountError, toBeEdited } = this.state;\r\n\r\n    return <div id=\"users-page\">\r\n    <div className=\"header\">\r\n      <div>\r\n        <input \r\n          className=\"search-input\" \r\n          placeholder=\"Search\" \r\n          onChange={(e) => this.setState({ searchValue: e.target.value })} \r\n          value={searchValue} \r\n        />\r\n        <button \r\n          className=\"add-account-button\" \r\n          onClick={() => this.setState({ addAccountVisible: true })}\r\n        >\r\n          Add Account\r\n        </button>\r\n      </div>\r\n      <div className=\"user-stats\">\r\n        Accounts: <span className=\"count\">{count}</span>\r\n      </div>\r\n    </div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Username</th>\r\n          <th>Role</th>\r\n          <th>Operations</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          // maps each user to the table\r\n          users.filter((user) => user.username.includes(searchValue)).map((user) => (\r\n              <tr>\r\n                <td>{user.username}</td>\r\n                <td>{user.userType}</td>\r\n                <td>\r\n                  <button \r\n                    className=\"edit-button\" \r\n                    onClick={() => this.setState({ editAccountVisible: true, toBeEdited: user })}\r\n                  >\r\n                    <img src={editIcon} alt=\"Edit\" />\r\n                  </button>\r\n                  <button \r\n                    className=\"delete-button\" \r\n                    onClick={() => this.onDelete(user)} \r\n                    disabled={user === \"admin\"}\r\n                  >\r\n                    <img src={trashIcon} alt=\"Delete\" />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          )\r\n        }\r\n      </tbody>\r\n    </table>\r\n    <AddAccount \r\n      visible={addAccountVisible} \r\n      onOk={(username) => this.addAccount(username)} \r\n      onCancel={() => this.setState({ addAccountVisible: false })} \r\n      errorMessage={addAccountError}\r\n    />\r\n    <AdminEditAccount \r\n      user={toBeEdited}\r\n      visible={editAccountVisible}\r\n      onOk={(username, role, editPasswordFlag, previousPassword, newPassword, confirmNewPassword) => this.onEdit(username, role, editPasswordFlag, previousPassword, newPassword, confirmNewPassword)}\r\n      onCancel={() => this.setState({ editAccountVisible: false })}\r\n      errorMessage={editAccountError}\r\n    />\r\n  </div>\r\n  }\r\n};","import React from 'react';\r\n\r\nimport '../assets/styles/pages/Inventory.css';\r\n\r\nconst Inventory = () => {\r\n  return <div>\r\n    <h1>Inventory Page</h1>\r\n  </div>\r\n};\r\n\r\nexport default Inventory;","import React, { useState } from 'react';\r\nimport { Checkbox } from 'antd';\r\n\r\nimport { UserService } from '../services';\r\nimport { getUser, setUserLocal } from '../utils/store';\r\n\r\nimport '../assets/styles/pages/UserEditAccount.css';\r\n\r\nconst UserEditAccount = ({ updateUser }) => {\r\n  const user = getUser();\r\n\r\n  const [username, setUsername] = useState(user.username);\r\n  const [previousPassword, setPreviousPassword] = useState('');\r\n  const [editPasswordFlag, setEditPasswordFlag] = useState(false);\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const onConfirm = (e) => {\r\n    e.preventDefault()\r\n    setPreviousPassword('')\r\n    setNewPassword('')\r\n    setConfirmNewPassword('')\r\n\r\n    if(username === '' || username === null) {\r\n      setErrorMessage(\"Username cannot be empty\")\r\n       (user.username)\r\n      return;\r\n    } else if(username === user.username) {\r\n      setErrorMessage(\"Username cannot be the same\")\r\n      return;\r\n    } else if(username.length < 6) {\r\n      setErrorMessage(\"Username has to be atleast 6 characters\")\r\n      setUsername(user.username)\r\n      return;\r\n    } else if(username.length > 30) {\r\n      setErrorMessage(\"Username has to be atmost 30 characters\")\r\n      setUsername(user.username)\r\n      return;\r\n    } else if(username.includes(' ')) {\r\n      setErrorMessage(\"Username cannot contain a space\")\r\n      setUsername(user.username)\r\n      return;\r\n    } \r\n\r\n    if(editPasswordFlag) {\r\n      if(previousPassword === '' || previousPassword === null) {\r\n        setErrorMessage('Previous password cannot be empty')\r\n        return \r\n      }\r\n  \r\n      if(newPassword === '' || newPassword === null) {\r\n        setErrorMessage('Previous password cannot be empty')\r\n        return \r\n      }\r\n  \r\n      if(confirmNewPassword === '' || confirmNewPassword === null) {\r\n        setErrorMessage('Previous password cannot be empty')\r\n        return \r\n      }\r\n  \r\n      if(previousPassword.length < 6 || newPassword.length < 6 || confirmNewPassword.length < 6) {\r\n        setErrorMessage('Password has to be atleast 6 characters')\r\n        return \r\n      }\r\n  \r\n      if(previousPassword.length > 30 || newPassword.length > 30 || confirmNewPassword.length > 30) {\r\n        setErrorMessage('Password has to be atmost 30 characters')\r\n        return \r\n      }\r\n  \r\n      if(previousPassword === newPassword && previousPassword === confirmNewPassword) {\r\n        setErrorMessage('Previous password and the new password is the same')\r\n        return \r\n      }\r\n  \r\n      if(newPassword !== confirmNewPassword) {\r\n        setErrorMessage('New password and confirm new password must be the same.')\r\n        return \r\n      }\r\n    }\r\n\r\n    UserService.patchUser(user._id, username, 'user', editPasswordFlag ? previousPassword : null, editPasswordFlag ? newPassword : null)\r\n      .then((res) => {\r\n        const { result } = res.data;\r\n\r\n        setUserLocal(result)\r\n        setErrorMessage('');\r\n        updateUser(result.username)\r\n        alert('Successfully edited the account')\r\n      }) \r\n      .catch((err) => {\r\n        const { data } = err.response;\r\n\r\n        setErrorMessage(data)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div id='user-edit-account'>\r\n      <h1>Edit Account</h1>\r\n      <input \r\n        placeholder='Username' \r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <br /><br />\r\n      <Checkbox checked={editPasswordFlag} onChange={(e) => setEditPasswordFlag(e.target.checked)}>Edit Password</Checkbox>\r\n      <br />\r\n      <input \r\n        placeholder='Previous Password' \r\n        value={previousPassword} \r\n        onChange={(e) => setPreviousPassword(e.target.value)}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <br />\r\n      <input \r\n        placeholder='New Password' \r\n        value={newPassword} \r\n        onChange={(e) => setNewPassword(e.target.value)}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <input \r\n        placeholder='Confirm New Password' \r\n        value={confirmNewPassword} \r\n        onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <div className='error-message'>{errorMessage}</div>\r\n      <button className='confirm-button' onClick={(e) => onConfirm(e)}>Confirm</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserEditAccount;","const LOGIN_FALLBACK = '/';\r\nconst ADMIN_FALLBACK = '/users';\r\nconst USER_FALLBACK = '/inventory';\r\n\r\nexport { \r\n  LOGIN_FALLBACK,\r\n  ADMIN_FALLBACK,\r\n  USER_FALLBACK \r\n};","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { LOGIN_FALLBACK, USER_FALLBACK } from './constants';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // checks if user is logged in\r\n      if (getUser()) {\r\n        // checks if user is a user, if he is, he'll be redirected to user page\r\n        if (getUser().userType === 'user') {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: USER_FALLBACK,\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        // if not, then the user will see the admin page\r\n        return <Component {...props} />;\r\n      }\r\n      // if user is logged out, redirect to login page\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: LOGIN_FALLBACK,\r\n            state: {\r\n              from: props.location,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default AdminRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { LOGIN_FALLBACK } from './constants';\r\n\r\nconst UserRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // checks if user is logged in\r\n      if (getUser()) {\r\n\r\n        // if not, then the user will see the user page\r\n        return <Component {...props} />;\r\n      }\r\n      // if user is logged out, redirect to login page\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: LOGIN_FALLBACK,\r\n            state: {\r\n              from: props.location,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default UserRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { ADMIN_FALLBACK, USER_FALLBACK } from './constants';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // if user is not logged in, stay in the login page\r\n      if (!getUser()) return <Component {...props} />;\r\n      // check if user is an admin, if yes, then user will be redirected to admin page\r\n      if (getUser().userType === 'admin') return <Redirect to={{ pathname: ADMIN_FALLBACK }} />;\r\n      // if user is user, then user will be redirected to the user page\r\n      return <Redirect to={{ pathname: USER_FALLBACK }} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PublicRoute;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Navbar } from './components';\r\nimport { Login, Users, Inventory, UserEditAccount } from './pages';\r\nimport { AdminRoute, UserRoute, PublicRoute } from './utils';\r\nimport { getUser } from './utils/store';\r\n\r\nimport './assets/styles/App.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ username: getUser() ? getUser().username : '' })\r\n  }\r\n\r\n  render() {\r\n    const { username } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <AdminRoute path=\"/users\" component={Navbar} />\r\n            <UserRoute path=\"/inventory\" component={() => <Navbar username={username}/>} />\r\n            <UserRoute path=\"/edit\" component={() => <Navbar username={username}/>} />\r\n            <Route path=\"/\" component={() => <></>} />\r\n          </Switch>\r\n          <Switch>\r\n            <AdminRoute path=\"/users\" component={Users} />\r\n            <UserRoute path=\"/inventory\" component={Inventory} />\r\n            <UserRoute path=\"/edit\" component={() => <UserEditAccount updateUser={(username) => this.setState({ username })} />} />\r\n            <PublicRoute path=\"/\" component={Login} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from \"react-dom\";\r\nimport './assets/styles/index.css';\r\nimport App from './App';\r\n\r\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}