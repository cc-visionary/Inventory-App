{"version":3,"sources":["utils/constants.js","services/UserService.js","services/ProductService.js","utils/store.js","components/Navbar.js","components/AddAccount.js","components/AdminEditAccount.js","components/AddProduct.js","components/EditProduct.js","assets/images/Login Image.svg","pages/Login.js","assets/images/Edit Icon.svg","assets/images/Trash Icon.svg","pages/Users.js","pages/AdminInventory.js","pages/UserInventory.js","pages/UserEditAccount.js","utils/AdminRoute.js","utils/UserRoute.js","utils/PublicRoute.js","App.js","index.js"],"names":["USER_FALLBACK","USER_API_BASE_URL","PRODUCT_API_BASE_URL","UserService","getAllUsers","axios","get","postRegister","username","post","postLogin","user","postLogout","patchUser","id","userType","previousPassword","newPassword","patch","deleteUser","delete","getAllProducts","postAddProduct","product","patchProduct","deleteProduct","name","getUser","localStorage","getItem","JSON","parse","setUserLocal","setItem","stringify","Navbar","onLogout","then","res","status","removeItem","window","location","reload","console","log","className","href","pathname","onClick","AddAccount","errorMessage","visible","onOk","onCancel","useState","setUsername","clearFields","handleOk","title","okText","value","onChange","e","target","placeholder","onKeyPress","key","style","color","Option","Select","AdminEditAccount","role","setRole","editPasswordFlag","setEditPasswordFlag","setPreviousPassword","setNewPassword","confirmPassword","setConfirmPassword","useEffect","width","val","disabled","checked","AddProduct","productName","setProductName","quantity","setQuantity","price","setPrice","supplier","setSupplier","setLocation","moment","datePurchased","setDatePurchased","display","justifyContent","min","format","EditProduct","Login","password","setPassword","setErrorMessage","onSignin","result","data","catch","err","response","type","src","loginImage","alt","Users","props","state","users","searchValue","count","addAccountVisible","editAccountVisible","addAccountError","editAccountError","toBeEdited","setState","length","confirmNewPassword","this","includes","_id","alert","index","indexOf","updateUser","slice","Modal","confirm","a","newUsers","info","content","error","code","filter","map","editIcon","onDelete","trashIcon","addAccount","onEdit","Component","AdminInventory","products","addProductVisible","addProductError","editProductVisible","editProductError","ProductService","date","item","dateString","addProduct","editProduct","UserInventory","UserEditAccount","setConfirmNewPassword","preventDefault","onConfirm","AdminRoute","component","rest","render","to","from","UserRoute","PublicRoute","App","path","document","getElementById"],"mappings":"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","file":"static/js/main.cac7fd90.chunk.js","sourcesContent":["const LOGIN_FALLBACK = '/';\r\nconst ADMIN_FALLBACK = '/users';\r\nconst USER_FALLBACK = '/inventory';\r\n\r\nconst USER_API_BASE_URL = \"/api/users\";\r\nconst PRODUCT_API_BASE_URL = \"/api/products\";\r\n\r\nexport { \r\n  LOGIN_FALLBACK,\r\n  ADMIN_FALLBACK,\r\n  USER_FALLBACK,\r\n  USER_API_BASE_URL,\r\n  PRODUCT_API_BASE_URL\r\n};","/* Contains the functions to requests to URL Paths in relation to the `users` collection */\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { USER_API_BASE_URL } from \"../utils/constants\";\r\n\r\nconst UserService = {\r\n  getAllUsers: () => axios.get(USER_API_BASE_URL),\r\n  postRegister: (username) => axios.post(`${USER_API_BASE_URL}/register`, { username }),\r\n  postLogin: (user) => axios.post(`${USER_API_BASE_URL}/login`, user),\r\n  postLogout: () => axios.post(`${USER_API_BASE_URL}/logout`),\r\n  patchUser: (id, username, userType, previousPassword, newPassword) => axios.patch(`${USER_API_BASE_URL}`, {id, username, userType, previousPassword, newPassword}), \r\n  deleteUser: (id) => axios.delete(`${USER_API_BASE_URL}/${id}`),\r\n}\r\n\r\nexport default UserService;","/* Contains the functions to requests to URL Paths in relation to the `products` collection */\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { PRODUCT_API_BASE_URL } from \"../utils/constants\";\r\n\r\nconst UserService = {\r\n  getAllProducts: () => axios.get(PRODUCT_API_BASE_URL),\r\n  postAddProduct: (product) => axios.post(`${PRODUCT_API_BASE_URL}/add`, product),\r\n  patchProduct: (product) => axios.post(PRODUCT_API_BASE_URL, product),\r\n  deleteProduct: (name) => axios.post(`${PRODUCT_API_BASE_URL}/delete/${name}`)\r\n}\r\n\r\nexport default UserService;","// local storage for the user\r\n\r\n/* ---------------- USER ------------------*/\r\n\r\n// return the user data from the local storage\r\nexport const getUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  if (user) return JSON.parse(user);\r\n  return null;\r\n};\r\n\r\n// remove the token and user from the local storage\r\nexport const removeLocalUser = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// set the token and user from the local storage\r\nexport const setUserLocal = (user) => {\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n};","import React from 'react';\r\n\r\nimport { UserService } from '../services';\r\nimport { getUser, removeLocalUser } from '../utils/store';\r\n\r\nimport '../assets/styles/components/Navbar.css';\r\n\r\nconst Navbar = ({ username }) => {\r\n  const onLogout = () => {\r\n    UserService.postLogout()\r\n      .then((res) => {\r\n        if(res.status === 200) {\r\n          removeLocalUser();\r\n          window.location.reload();\r\n        } else {\r\n          console.log(\"There was an error logging out...\");\r\n        } \r\n      })\r\n  }\r\n\r\n  return <div id=\"navbar\">\r\n    <div className=\"left\">\r\n      <span>{username}</span>\r\n    </div>\r\n    <div className=\"middle\">\r\n      {getUser().userType === \"admin\" ? <a href=\"/users\" className={window.location.pathname === '/users' ? \"active\" : \"\"}>Accounts</a> : <></>}\r\n      <a href=\"/inventory\" className={window.location.pathname === '/inventory' ? \"active\" : \"\"}>Inventory</a>\r\n      {getUser().userType === \"user\" ? <a href=\"/edit\" className={window.location.pathname === '/edit' ? \"active\" : \"\"}>Edit</a> : <></>}\r\n    </div>\r\n    <button className=\"logout-button\" onClick={() => onLogout()}>Log out</button>\r\n  </div>\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from 'react';\r\n\r\nimport { Modal, Input } from 'antd';\r\n\r\nconst AddAccount = ({ errorMessage, visible, onOk, onCancel }) => {\r\n  const [username, setUsername] = useState('');\r\n\r\n  const clearFields = () => {\r\n    setUsername('');\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(username);\r\n    clearFields();\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n    clearFields();\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      title=\"Add Account\" \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Add\" \r\n      onCancel={handleCancel}\r\n    >\r\n      <label><strong>Username</strong></label>\r\n      <Input \r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)} \r\n        placeholder=\"Enter username\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n      <p>Note: Password will automatically generated.</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default AddAccount;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Modal, Input, Select, Checkbox } from 'antd';\r\nimport { getUser } from '../utils/store';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AdminEditAccount = ({ user, errorMessage, visible, onOk, onCancel }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [editPasswordFlag, setEditPasswordFlag] = useState(false);\r\n  const [previousPassword, setPreviousPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(user != null) {\r\n      setUsername(user.username);\r\n      setRole(user.userType);\r\n    }\r\n  }, [user]);\r\n\r\n  const clearFields = () => {\r\n    if(user != null) {\r\n      setUsername(user.username)\r\n    }\r\n    setPreviousPassword('');\r\n    setNewPassword('');\r\n    setConfirmPassword('');\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(username, role, editPasswordFlag, previousPassword, newPassword, confirmPassword);\r\n    clearFields();\r\n  }\r\n\r\n  const handleClose = () => {\r\n    onCancel();\r\n    clearFields();\r\n  }\r\n\r\n  return (\r\n    <Modal \r\n      title={`Edit ${username}'s Password`} \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Confirm\" \r\n      onCancel={handleClose}\r\n    >\r\n      <label><strong>Username</strong></label>\r\n      <Input \r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)} \r\n        placeholder=\"Enter username\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n      />\r\n      <br /><br />\r\n      <label><strong>Role</strong></label>\r\n      <br />\r\n      <Select style={{width: '100%'}} value={role} onChange={(val) => setRole(val)} disabled={!user || getUser().username === user.username}>\r\n        <Option value='user'>user</Option>\r\n        <Option value='admin'>admin</Option>\r\n      </Select>\r\n      <br /><br />\r\n      <Checkbox checked={editPasswordFlag} onChange={(e) => setEditPasswordFlag(e.target.checked)}>Edit Password</Checkbox>\r\n      <br />\r\n      <label><strong>Previous Password</strong></label>\r\n      <Input \r\n        value={previousPassword} \r\n        onChange={(e) => setPreviousPassword(e.target.value)} \r\n        placeholder=\"Enter previous password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <br /><br />\r\n      <label><strong>New Password</strong></label>\r\n      <Input \r\n        value={newPassword} \r\n        onChange={(e) => setNewPassword(e.target.value)} \r\n        placeholder=\"Enter current password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <label><strong>Confirm Password</strong></label>\r\n      <Input \r\n        value={confirmPassword} \r\n        onChange={(e) => setConfirmPassword(e.target.value)} \r\n        placeholder=\"Confirm your password\" \r\n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default AdminEditAccount;\r\n","import React, { useState } from 'react';\nimport { Modal, Input, InputNumber, DatePicker } from 'antd';\nimport moment from 'moment';\n\nconst AddProduct = ({ errorMessage, visible, onOk, onCancel }) => {\n  const [productName, setProductName] = useState('');\n  const [quantity, setQuantity] = useState(1);\n  const [price, setPrice] = useState(1);\n  const [supplier, setSupplier] = useState('');\n  const [location, setLocation] = useState('');\n  const [datePurchased, setDatePurchased] = useState(moment());\n\n  const clearFields = () => {\n    setProductName('');\n    setQuantity(1);\n    setPrice(1);\n    setSupplier('');\n    setLocation('');\n    setDatePurchased(moment())\n  }\n\n  const handleOk = () => {\n    onOk(productName, quantity, price, supplier, location, datePurchased);\n    clearFields();\n  } \n  const handleCancel = () => {\n    onCancel();\n    clearFields();\n  }\n\n  return(\n    <Modal \n      title=\"Add Product\" \n      visible={visible} \n      onOk={handleOk} \n      okText=\"Add\" \n      onCancel={handleCancel}\n    >\n      <label><strong>Product Name</strong></label>\n      <Input \n        name=\"product_name\"\n        value={productName} \n        onChange={(e) => setProductName(e.target.value)} \n        placeholder=\"Enter product name\" \n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\n      />\n      <div style={{display: 'flex', justifyContent: 'space-between'}}>\n        <div>\n          <label><strong>Quantity</strong></label>\n          <InputNumber \n            name=\"quantity\"\n            min={1}\n            value={quantity} \n            onChange={(val) => setQuantity(val)} \n            placeholder=\"Enter product name\" \n            onKeyPress={(e) => e.key === 'Enter' && handleOk()}\n            style={{width: '100%'}} \n          />\n        </div>\n        <div>\n          <label><strong>Price</strong></label>\n          <InputNumber \n            name=\"price\"\n            min={1}\n            value={price} \n            onChange={(val) => setPrice(val)} \n            placeholder=\"Enter product name\" \n            onKeyPress={(e) => e.key === 'Enter' && handleOk()}\n            style={{width: '100%'}} \n          />\n        </div>\n      </div>\n      <label><strong>Supplier</strong></label>\n      <Input \n        name=\"supplier\"\n        value={supplier} \n        onChange={(e) => setSupplier(e.target.value)} \n        placeholder=\"Enter product name\" \n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\n      />\n      <label><strong>Stock Location</strong></label>\n      <Input \n        name=\"location\"\n        value={location} \n        onChange={(e) => setLocation(e.target.value)} \n        placeholder=\"Enter product name\" \n        onKeyPress={(e) => e.key === 'Enter' && handleOk()}\n      />\n      <label><strong>Date Purchased</strong></label>\n      <br />\n      <DatePicker \n        name=\"date_purchased\"\n        value={datePurchased}\n        format='MMMM DD, YYYY'\n        onChange={(val) => setDatePurchased(val)}\n        style={{width: '100%'}} \n      />\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\n    </Modal>\n  )\n};\n\nexport default AddProduct;","import React, { useState } from 'react';\r\n\r\nimport { Modal, Input } from 'antd';\r\n\r\nconst EditProduct = ({ product, errorMessage, visible, onOk, onCancel }) => {\r\n  const [username, setUsername] = useState('');\r\n\r\n  const clearFields = () => {\r\n    setUsername('');\r\n  }\r\n\r\n  const handleOk = () => {\r\n    onOk(username);\r\n    clearFields();\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    onCancel();\r\n    clearFields();\r\n  }\r\n\r\n  return(\r\n    <Modal \r\n      title=\"Edit Product\" \r\n      visible={visible} \r\n      onOk={handleOk} \r\n      okText=\"Edit\" \r\n      onCancel={handleCancel}\r\n    >\r\n      <p style={{color: \"#f00\"}}>{errorMessage}</p>\r\n    </Modal>\r\n  )\r\n};\r\n\r\nexport default EditProduct;","export default __webpack_public_path__ + \"static/media/Login Image.6954d3e8.svg\";","import React, { useState } from 'react';\r\n\r\nimport { UserService } from '../services';\r\nimport { setUserLocal } from '../utils/store';\r\n\r\nimport loginImage from '../assets/images/Login Image.svg';\r\n\r\nimport '../assets/styles/pages/Login.css';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // calls this when logging in\r\n  const onSignin = () => {\r\n    const user = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    if(username === '') {\r\n      setErrorMessage(\"Username is empty\");\r\n      return;\r\n    }\r\n\r\n    if(password === '') {\r\n      setErrorMessage(\"Password is empty\");\r\n      return;\r\n    }\r\n\r\n    UserService.postLogin(user)\r\n      .then((res) => {\r\n        if(res.status === 200) {\r\n          const { result } = res.data;\r\n          setUserLocal(result);\r\n          window.location.reload();\r\n        } \r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 401) {\r\n          setErrorMessage(\"Invalid username or password\");  \r\n        }\r\n      })\r\n  }\r\n\r\n  return <div id=\"login-page\">\r\n    <div className=\"card\">\r\n      <p className=\"title\">Login</p>\r\n      <p className=\"sub-title\">Welcome back!</p>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Username\"\r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)} \r\n        onKeyPress={(e) => e.key === 'Enter' && onSignin()}\r\n      />\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"Password\"\r\n        value={password} \r\n        onChange={(e) => setPassword(e.target.value)} \r\n        onKeyPress={(e) => e.key === 'Enter' && onSignin()}\r\n      />\r\n      <p className=\"error-message\">{errorMessage}</p>\r\n      <img src={loginImage} alt=\"Login\" />\r\n      <button onClick={() => onSignin()}>Sign in</button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/Edit Icon.7ee14592.svg\";","export default __webpack_public_path__ + \"static/media/Trash Icon.5db8102e.svg\";","import React, { Component } from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nimport { AddAccount, AdminEditAccount } from '../components';\r\nimport { UserService } from '../services';\r\nimport { getUser, setUserLocal } from '../utils/store';\r\n\r\nimport editIcon from '../assets/images/Edit Icon.svg';\r\nimport trashIcon from '../assets/images/Trash Icon.svg';\r\n\r\nimport '../assets/styles/pages/Users.css';\r\n\r\nexport default class Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      users: [],\r\n      searchValue: '',\r\n      count: 0,\r\n      addAccountVisible: false,\r\n      editAccountVisible: false,\r\n      addAccountError: '',\r\n      editAccountError: '',\r\n      toBeEdited: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAllUsers()\r\n      .then((res) => {\r\n        const { result: users } = res.data;\r\n\r\n        this.setState({ users , count: users.length });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  onEdit(username, userType, editPasswordFlag, previousPassword, newPassword, confirmNewPassword) {\r\n    const { toBeEdited, users } = this.state;\r\n\r\n    if(toBeEdited != null) {\r\n      if(username === '' || username === null) {\r\n        this.setState({ editAccountError: \"Username cannot be empty\" });\r\n        return;\r\n      } else if(username.length < 6) {\r\n        this.setState({ editAccountError: \"Username has to be atleast 6 characters\" })\r\n        return;\r\n      } else if(username.length > 30) {\r\n        this.setState({ editAccountError: \"Username has to be atmost 30 characters\" })\r\n        return;\r\n      } else if(username.includes(' ')) {\r\n        this.setState({ editAccountError: \"Username cannot contain a space\" })\r\n        return;\r\n      } \r\n      \r\n      if(!editPasswordFlag && username === toBeEdited.username && userType === toBeEdited.userType) {\r\n        this.setState({ editAccountError: \"Cannot proceed. No changes has been done\" })\r\n        return;\r\n      }\r\n\r\n      if(userType !== 'user' && userType !== 'admin') {\r\n        this.setState({ editAccountError: \"Role can only be either `user` or `admin`\" })\r\n        return;\r\n      }\r\n\r\n      if(editPasswordFlag) {\r\n        if(previousPassword === '' || previousPassword === null) {\r\n          this.setState({ editAccountError: \"Previous password cannot be empty\" });\r\n          return;\r\n        }\r\n  \r\n        if(newPassword === '' || newPassword === null) {\r\n          this.setState({ editAccountError: \"New password cannot be empty\" });\r\n          return;\r\n        }\r\n  \r\n        if(confirmNewPassword === '' || confirmNewPassword === null) {\r\n          this.setState({ editAccountError: \"Confirm password cannot be empty\" });\r\n          return;\r\n        }\r\n\r\n        console.log([previousPassword, newPassword, confirmNewPassword])\r\n  \r\n        if(previousPassword.length < 6 || newPassword.length < 6 || confirmNewPassword.length < 6) {\r\n          this.setState({ editAccountError: \"Password has to be atleast 6 characters\" });\r\n          return \r\n        }\r\n    \r\n        if(previousPassword.length > 30 || newPassword.length > 30 || confirmNewPassword.length > 30) {\r\n          this.setState({ editAccountError: \"Password has to be atmost 30 characters\" });\r\n          return \r\n        }\r\n  \r\n        if(newPassword !== confirmNewPassword) {\r\n          this.setState({ editAccountError: \"New password and confirm password doesn't match\" });\r\n          return;\r\n        }\r\n      } else {\r\n        previousPassword = null;\r\n        newPassword = null;\r\n      }\r\n\r\n      UserService.patchUser(toBeEdited._id, username, userType, previousPassword, newPassword)\r\n        .then((res) => {\r\n          const { result } = res.data;\r\n\r\n          alert(`Update was successful`)\r\n          \r\n          const index = users.indexOf(toBeEdited);\r\n\r\n          if(getUser().username === toBeEdited.username) {\r\n            setUserLocal(result)\r\n            this.props.updateUser(username)\r\n          }\r\n\r\n          this.setState({ editAccountVisible: false, toBeEdited: null, users: [...users.slice(0, index), result, ...users.slice(index + 1)], editAccountError: \"\" });\r\n        }) \r\n        .catch((err) => {\r\n          const { data } = err.response;\r\n\r\n          this.setState({ editAccountError: data });\r\n        })\r\n    }\r\n  }\r\n\r\n  onDelete(user) {\r\n    const { users } = this.state;\r\n\r\n    // asks for admin confirmation on whether or not to delete the user\r\n    Modal.confirm({\r\n      title: `Are you sure you want to delete ${user.username}`,\r\n      onOk: async () => {\r\n        UserService.deleteUser(user._id)\r\n        .then(() => {\r\n          const index = users.indexOf(user);\r\n          const newUsers = [...users.slice(0, index), ...users.slice(index + 1)];\r\n          this.setState({ users: newUsers, count: newUsers.length });\r\n          alert(`Deletion was successful`)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.response.data);\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  addAccount(username) {\r\n    const { users, count } = this.state;\r\n\r\n    if(username === '' || username === null) {\r\n      this.setState({ addAccountError: \"Username cannot be empty\" })\r\n      return;\r\n    } else if(username.length < 6) {\r\n      this.setState({ addAccountError: \"Username has to be atleast 6 characters\" })\r\n      return;\r\n    } else if(username.length > 30) {\r\n      this.setState({ addAccountError: \"Username has to be atmost 30 characters\" })\r\n      return;\r\n    } else if(username.includes(' ')) {\r\n      this.setState({ addAccountError: \"Username cannot contain a space\" })\r\n      return;\r\n    }\r\n\r\n    UserService.postRegister(username)\r\n      .then((res) => {\r\n        const { result } = res.data;\r\n\r\n        this.setState({ \r\n          users: [...users, result], \r\n          count: count + 1,\r\n          addAccountVisible: false,\r\n          addAccountError: \"\",\r\n        })\r\n\r\n        Modal.info({\r\n          title: \"Password\",\r\n          content: (\r\n            <div>Password: {result.password}</div>\r\n          ),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        const { error } = err.response.data;\r\n        if(error.code === 11000) {\r\n          this.setState({ addAccountError: \"Username already exists\" })\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { users, searchValue, count, addAccountVisible, addAccountError, editAccountVisible, editAccountError, toBeEdited } = this.state;\r\n\r\n    return <div id=\"users-page\">\r\n    <div className=\"header\">\r\n      <div>\r\n        <input \r\n          className=\"search-input\" \r\n          placeholder=\"Search\" \r\n          onChange={(e) => this.setState({ searchValue: e.target.value })} \r\n          value={searchValue} \r\n        />\r\n        <button \r\n          className=\"add-account-button\" \r\n          onClick={() => this.setState({ addAccountVisible: true })}\r\n        >\r\n          Add Account\r\n        </button>\r\n      </div>\r\n      <div className=\"user-stats\">\r\n        Accounts: <span className=\"count\">{count}</span>\r\n      </div>\r\n    </div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Username</th>\r\n          <th>Role</th>\r\n          <th>Operations</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          // maps each user to the table\r\n          users.filter((user) => user.username.includes(searchValue)).map((user) => (\r\n              <tr>\r\n                <td>{user.username}</td>\r\n                <td>{user.userType}</td>\r\n                <td>\r\n                  <button \r\n                    className=\"edit-button\" \r\n                    onClick={() => this.setState({ editAccountVisible: true, toBeEdited: user })}\r\n                  >\r\n                    <img src={editIcon} alt=\"Edit\" />\r\n                  </button>\r\n                  <button \r\n                    className=\"delete-button\" \r\n                    onClick={() => this.onDelete(user)} \r\n                    disabled={user === \"admin\"}\r\n                  >\r\n                    <img src={trashIcon} alt=\"Delete\" />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          )\r\n        }\r\n      </tbody>\r\n    </table>\r\n    <AddAccount \r\n      visible={addAccountVisible} \r\n      onOk={(username) => this.addAccount(username)} \r\n      onCancel={() => this.setState({ addAccountVisible: false, addAccountError: \"\" })} \r\n      errorMessage={addAccountError}\r\n    />\r\n    <AdminEditAccount \r\n      user={toBeEdited}\r\n      visible={editAccountVisible}\r\n      onOk={(username, role, editPasswordFlag, previousPassword, newPassword, confirmNewPassword) => this.onEdit(username, role, editPasswordFlag, previousPassword, newPassword, confirmNewPassword)}\r\n      onCancel={() => this.setState({ editAccountVisible: false, editAccountError: \"\" })}\r\n      errorMessage={editAccountError}\r\n    />\r\n  </div>\r\n  }\r\n};","import React, { Component } from 'react';\r\n\r\nimport { ProductService } from '../services';\r\nimport { AddProduct, EditProduct } from '../components';\r\n\r\nimport editIcon from '../assets/images/Edit Icon.svg';\r\nimport trashIcon from '../assets/images/Trash Icon.svg';\r\n\r\nimport '../assets/styles/pages/AdminInventory.css';\r\n\r\nexport default class AdminInventory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchValue: '',\r\n      products: [],\r\n      count: 0,\r\n      toBeEdited: null,\r\n      addProductVisible: false,\r\n      addProductError: '',\r\n      editProductVisible: false,\r\n      editProductError: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    ProductService.getAllProducts().then((res) => {\r\n      const { result: products } = res.data;\r\n\r\n      this.setState({ products, count: products.length });\r\n    })\r\n  }\r\n\r\n  addProduct(productName, quantity, price, supplier, location, datePurchased) {\r\n    const { products, count } = this.state;\r\n\r\n    if(productName === null || productName === '') {\r\n      this.setState({ addProductError: \"Username cannot empty\" });\r\n      return;\r\n    }\r\n\r\n    if(quantity < 1) {\r\n      this.setState({ addProductError: \"Quantity has to be greater than 0\" });\r\n      return;\r\n    }\r\n\r\n    if(price < 1) {\r\n      this.setState({ addProductError: \"Price has to be greater than 0\" });\r\n      return;\r\n    }\r\n\r\n    if(supplier === null || supplier === '') {\r\n      this.setState({ addProductError: \"Supplier cannot empty\" });\r\n      return;\r\n    }\r\n\r\n    if(location === null || location === '') {\r\n      this.setState({ addProductError: \"Stock Location cannot empty\" });\r\n      return;\r\n    }\r\n\r\n    if(datePurchased === null) {\r\n      this.setState({ addProductError: \"Date Purchased cannot empty\" });\r\n      return;\r\n    }\r\n\r\n    const product = {\r\n      supplier,\r\n      location,\r\n      date: datePurchased,\r\n      name: productName,\r\n      quantity,\r\n      price\r\n    }\r\n\r\n    ProductService.postAddProduct(product)\r\n      .then((res) => {\r\n        const { result } = res.data\r\n      \r\n        this.setState({ products: [...products, result], count: count + 1, addProductVisible: false, addProductError: \"\" })\r\n      })\r\n      .catch((err) => {\r\n        const { error } = err.response.data;\r\n        if(error.code === 11000) {\r\n          this.setState({ addProductError: \"Product name already exists\" })\r\n        }\r\n      });\r\n    }\r\n\r\n  editProduct() {\r\n\r\n  }\r\n\r\n  render() {\r\n    const { searchValue, products, count, addProductVisible, addProductError, editProductVisible, editProductError, toBeEdited } = this.state;\r\n    return <div id='admin-inventory'>\r\n    <div className=\"header\">\r\n      <div>\r\n        <input \r\n          className=\"search-input\" \r\n          placeholder=\"Search\" \r\n          onChange={(e) => this.setState({ searchValue: e.target.value })} \r\n          value={searchValue} \r\n        />\r\n        <button \r\n          className=\"add-product-button\" \r\n          onClick={() => this.setState({ addProductVisible: true })}\r\n        >\r\n          Add Product\r\n        </button>\r\n      </div>\r\n      <div className=\"product-stats\">\r\n        Products: <span className=\"count\">{count}</span>\r\n      </div>\r\n    </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Date Purchased</th>\r\n            <th>Supplier</th>\r\n            <th>Quantity</th>\r\n            <th>Product Name</th>\r\n            <th>Price</th>\r\n            <th>Location</th>\r\n            <th>Operations</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            // maps per product to the table\r\n            products.filter((item) => item.name.includes(searchValue)).map((item) => (\r\n                <tr key={item.name}>\r\n                  <td>{item.dateString}</td>\r\n                  <td>{item.supplier}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.name}</td>\r\n                  <td>P {item.price}</td>\r\n                  <td>{item.location}</td>\r\n                  <td>\r\n                    <button \r\n                      className=\"edit-button\" \r\n                      onClick={() => this.setState({ editProductVisible: true, toBeEdited: item })}\r\n                    >\r\n                      <img src={editIcon} alt=\"Edit\" />\r\n                    </button>\r\n                    <button \r\n                      className=\"delete-button\" \r\n                      onClick={() => this.onDelete(item)} \r\n                    >\r\n                      <img src={trashIcon} alt=\"Delete\" />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            )\r\n          }\r\n        </tbody>\r\n      </table>\r\n      <AddProduct \r\n        errorMessage={addProductError} \r\n        visible={addProductVisible}\r\n        onOk={(productName, quantity, price, supplier, location, datePurchased) => this.addProduct(productName, quantity, price, supplier, location, datePurchased)}\r\n        onCancel={() => this.setState({ addProductVisible: false, addProductError: '' })}\r\n      />\r\n      <EditProduct \r\n        product={toBeEdited}\r\n        errorMessage={editProductError}\r\n        visible={editProductVisible} \r\n        onOk={(productName, quantity, price, supplier, location, datePurchased) => this.editProduct(productName, quantity, price, supplier, location, datePurchased)}\r\n        onCancel={() => this.setState({ editProductVisible: false, editProductError: '' })}\r\n      />\r\n    </div>\r\n  }\r\n};","import React, { Component } from 'react';\r\n\r\nimport '../assets/styles/pages/UserInventory.css';\r\nimport { ProductService } from '../services';\r\n\r\nexport default class UserInventory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchValue: '',\r\n      products: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    ProductService.getAllProducts().then((res) => {\r\n      const { result: products } = res.data;\r\n\r\n      this.setState({ products });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { searchValue, products } = this.state;\r\n\r\n    return (\r\n    <div id='user-inventory'>\r\n    <div className=\"header\">\r\n      <input \r\n        className=\"search-input\" \r\n        placeholder=\"Search\" \r\n        onChange={(e) => this.setState({ searchValue: e.target.value })} \r\n        value={searchValue} \r\n      />\r\n      <></>\r\n    </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Product Name</th>\r\n            <th>Supplier</th>\r\n            <th>Quantity</th>\r\n            <th>Date Purchased</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            // maps per user to the table\r\n            products.filter((item) => item.name.includes(searchValue)).map((item) => (\r\n                <tr key={item.name}>\r\n                  <td>{item.name}</td>\r\n                  <td>{item.supplier}</td>\r\n                  <td>{item.quantity}</td>\r\n                  <td>{item.dateString}</td>\r\n                </tr>\r\n              )\r\n            )\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )};\r\n};","import React, { useState } from 'react';\r\nimport { Checkbox } from 'antd';\r\n\r\nimport { UserService } from '../services';\r\nimport { getUser, setUserLocal } from '../utils/store';\r\n\r\nimport '../assets/styles/pages/UserEditAccount.css';\r\n\r\nconst UserEditAccount = ({ updateUser }) => {\r\n  const user = getUser();\r\n\r\n  const [username, setUsername] = useState(user.username);\r\n  const [previousPassword, setPreviousPassword] = useState('');\r\n  const [editPasswordFlag, setEditPasswordFlag] = useState(false);\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const onConfirm = (e) => {\r\n    e.preventDefault()\r\n    setPreviousPassword('')\r\n    setNewPassword('')\r\n    setConfirmNewPassword('')\r\n\r\n    if(username === '' || username === null) {\r\n      setErrorMessage(\"Username cannot be empty\")\r\n       (user.username)\r\n      return;\r\n    } else if(username === user.username) {\r\n      setErrorMessage(\"Username cannot be the same\")\r\n      return;\r\n    } else if(username.length < 6) {\r\n      setErrorMessage(\"Username has to be atleast 6 characters\")\r\n      setUsername(user.username)\r\n      return;\r\n    } else if(username.length > 30) {\r\n      setErrorMessage(\"Username has to be atmost 30 characters\")\r\n      setUsername(user.username)\r\n      return;\r\n    } else if(username.includes(' ')) {\r\n      setErrorMessage(\"Username cannot contain a space\")\r\n      setUsername(user.username)\r\n      return;\r\n    } \r\n\r\n    if(editPasswordFlag) {\r\n      if(previousPassword === '' || previousPassword === null) {\r\n        setErrorMessage('Previous password cannot be empty')\r\n        return \r\n      }\r\n  \r\n      if(newPassword === '' || newPassword === null) {\r\n        setErrorMessage('Previous password cannot be empty')\r\n        return \r\n      }\r\n  \r\n      if(confirmNewPassword === '' || confirmNewPassword === null) {\r\n        setErrorMessage('Previous password cannot be empty')\r\n        return \r\n      }\r\n  \r\n      if(previousPassword.length < 6 || newPassword.length < 6 || confirmNewPassword.length < 6) {\r\n        setErrorMessage('Password has to be atleast 6 characters')\r\n        return \r\n      }\r\n  \r\n      if(previousPassword.length > 30 || newPassword.length > 30 || confirmNewPassword.length > 30) {\r\n        setErrorMessage('Password has to be atmost 30 characters')\r\n        return \r\n      }\r\n  \r\n      if(previousPassword === newPassword && previousPassword === confirmNewPassword) {\r\n        setErrorMessage('Previous password and the new password is the same')\r\n        return \r\n      }\r\n  \r\n      if(newPassword !== confirmNewPassword) {\r\n        setErrorMessage('New password and confirm new password must be the same.')\r\n        return \r\n      }\r\n    }\r\n\r\n    UserService.patchUser(user._id, username, 'user', editPasswordFlag ? previousPassword : null, editPasswordFlag ? newPassword : null)\r\n      .then((res) => {\r\n        const { result } = res.data;\r\n\r\n        setUserLocal(result)\r\n        setErrorMessage('');\r\n        updateUser(result.username)\r\n        alert('Successfully edited the account')\r\n      }) \r\n      .catch((err) => {\r\n        const { data } = err.response;\r\n\r\n        setErrorMessage(data)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div id='user-edit-account'>\r\n      <h1>Edit Account</h1>\r\n      <input \r\n        placeholder='Username' \r\n        value={username} \r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <br /><br />\r\n      <Checkbox checked={editPasswordFlag} onChange={(e) => setEditPasswordFlag(e.target.checked)}>Edit Password</Checkbox>\r\n      <br />\r\n      <input \r\n        placeholder='Previous Password' \r\n        value={previousPassword} \r\n        onChange={(e) => setPreviousPassword(e.target.value)}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <br />\r\n      <input \r\n        placeholder='New Password' \r\n        value={newPassword} \r\n        onChange={(e) => setNewPassword(e.target.value)}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <input \r\n        placeholder='Confirm New Password' \r\n        value={confirmNewPassword} \r\n        onChange={(e) => setConfirmNewPassword(e.target.value)}\r\n        disabled={!editPasswordFlag}\r\n      />\r\n      <div className='error-message'>{errorMessage}</div>\r\n      <button className='confirm-button' onClick={(e) => onConfirm(e)}>Confirm</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserEditAccount;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { LOGIN_FALLBACK, USER_FALLBACK } from './constants';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // checks if user is logged in\r\n      if (getUser()) {\r\n        // checks if user is a user, if he is, he'll be redirected to user page\r\n        if (getUser().userType === 'user') {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: USER_FALLBACK,\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        // if not, then the user will see the admin page\r\n        return <Component {...props} />;\r\n      }\r\n      // if user is logged out, redirect to login page\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: LOGIN_FALLBACK,\r\n            state: {\r\n              from: props.location,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default AdminRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { LOGIN_FALLBACK } from './constants';\r\n\r\nconst UserRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // checks if user is logged in\r\n      if (getUser()) {\r\n\r\n        // if not, then the user will see the user page\r\n        return <Component {...props} />;\r\n      }\r\n      // if user is logged out, redirect to login page\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: LOGIN_FALLBACK,\r\n            state: {\r\n              from: props.location,\r\n            },\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nexport default UserRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getUser } from './store';\r\nimport { ADMIN_FALLBACK, USER_FALLBACK } from './constants';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // if user is not logged in, stay in the login page\r\n      if (!getUser()) return <Component {...props} />;\r\n      // check if user is an admin, if yes, then user will be redirected to admin page\r\n      if (getUser().userType === 'admin') return <Redirect to={{ pathname: ADMIN_FALLBACK }} />;\r\n      // if user is user, then user will be redirected to the user page\r\n      return <Redirect to={{ pathname: USER_FALLBACK }} />;\r\n    }}\r\n  />\r\n);\r\n\r\nexport default PublicRoute;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Navbar } from './components';\r\nimport { Login, Users, AdminInventory, UserInventory, UserEditAccount } from './pages';\r\nimport { AdminRoute, UserRoute, PublicRoute } from './utils';\r\nimport { getUser } from './utils/store';\r\n\r\nimport './assets/styles/App.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ username: getUser() ? getUser().username : '' })\r\n  }\r\n\r\n  render() {\r\n    const { username } = this.state;\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"app\">\r\n          <Switch>\r\n            <AdminRoute path=\"/users\" component={() => <Navbar username={username}/>} />\r\n            <UserRoute path=\"/inventory\" component={() => <Navbar username={username}/>} />\r\n            <UserRoute path=\"/edit\" component={() => <Navbar username={username}/>} />\r\n            <Route path=\"/\" component={() => <></>} />\r\n          </Switch>\r\n          <Switch>\r\n            <AdminRoute path=\"/users\" component={() => <Users updateUser={(username) => this.setState({ username })} />} />\r\n            <UserRoute path=\"/inventory\" component={getUser() ? (getUser().userType === 'user' ? UserInventory : AdminInventory) : null} />\r\n            <UserRoute path=\"/edit\" component={() => <UserEditAccount updateUser={(username) => this.setState({ username })} />} />\r\n            <PublicRoute path=\"/\" component={Login} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from \"react-dom\";\r\nimport './assets/styles/index.css';\r\nimport App from './App';\r\n\r\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}